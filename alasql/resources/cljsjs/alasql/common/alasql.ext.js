/**********************************************************************
 * Extern for alasql
 * Generated by http://jmmk.github.io/javascript-externs-generator
 **********************************************************************/
var alasql = {
  "DEFAULTDATABASEID": {},
  "Database": function () {},
  "MAXSQLCACHESIZE": {},
  "Query": function () {},
  "Recordset": function () {},
  "Table": function () {},
  "Transaction": function () {},
  "View": function () {},
  "_aggrOriginal": {
    "GROUP_CONCAT": function () {},
    "MEDIAN": function () {},
    "QUART": function () {},
    "QUART2": function () {},
    "QUART3": function () {},
    "STD": function () {},
    "STDDEV": function () {},
    "STDEV": function () {},
    "STDEVP": function () {},
    "VAR": function () {},
    "VARP": function () {}
  },
  "adrun": function () {},
  "aggr": {
    "GROUP_CONCAT": function () {},
    "MEDIAN": function () {},
    "QUART": function () {},
    "QUART2": function () {},
    "QUART3": function () {},
    "STD": function () {},
    "STDDEV": function () {},
    "STDEV": function () {},
    "STDEVP": function () {},
    "VAR": function () {},
    "VARP": function () {}
  },
  "autoval": function () {},
  "buffer": {},
  "busy": {},
  "clear": function () {},
  "compile": function () {},
  "databasenum": {},
  "databases": {
    "alasql": {
      "autoval": function () {},
      "counter": {},
      "databaseid": {},
      "dbversion": {},
      "exec": function () {},
      "indices": {},
      "objects": {},
      "resetSqlCache": function () {},
      "sqlCache": {},
      "sqlCacheSize": {},
      "tables": {},
      "transaction": function () {},
      "triggers": {},
      "views": {}
    },
    "dbo": {
      "autoval": function () {},
      "counter": {},
      "databaseid": {},
      "dbversion": {},
      "exec": function () {},
      "indices": {},
      "objects": {},
      "resetSqlCache": function () {},
      "sqlCache": {},
      "sqlCacheSize": {},
      "tables": {},
      "transaction": function () {},
      "triggers": {},
      "views": {}
    }
  },
  "debug": {},
  "declares": {},
  "dexec": function () {},
  "drun": function () {},
  "engines": {
    "FILE": {
      "attachDatabase": function () {},
      "begin": function () {},
      "commit": function () {},
      "createDatabase": function () {},
      "createTable": function () {},
      "dropDatabase": function () {},
      "dropTable": function () {},
      "fromTable": function () {},
      "intoTable": function () {},
      "loadTableData": function () {},
      "rollback": function () {},
      "saveTableData": function () {},
      "updateFile": function () {}
    },
    "FILESTORAGE": {
      "attachDatabase": function () {},
      "begin": function () {},
      "commit": function () {},
      "createDatabase": function () {},
      "createTable": function () {},
      "dropDatabase": function () {},
      "dropTable": function () {},
      "fromTable": function () {},
      "intoTable": function () {},
      "loadTableData": function () {},
      "rollback": function () {},
      "saveTableData": function () {},
      "updateFile": function () {}
    },
    "INDEXEDDB": {
      "attachDatabase": function () {},
      "createDatabase": function () {},
      "createTable": function () {},
      "deleteFromTable": function () {},
      "dropDatabase": function () {},
      "dropTable": function () {},
      "fromTable": function () {},
      "getDatabaseNames": function () {},
      "getDatabaseNamesNotSupported": {},
      "intoTable": function () {},
      "showDatabases": function () {},
      "updateTable": function () {}
    },
    "LOCALSTORAGE": {
      "attachDatabase": function () {},
      "begin": function () {},
      "commit": function () {},
      "createDatabase": function () {},
      "createTable": function () {},
      "dropDatabase": function () {},
      "dropTable": function () {},
      "fromTable": function () {},
      "get": function () {},
      "intoTable": function () {},
      "loadTableData": function () {},
      "removeTable": function () {},
      "restoreTable": function () {},
      "rollback": function () {},
      "saveTableData": function () {},
      "set": function () {},
      "showDatabases": function () {},
      "storeTable": function () {},
      "truncateTable": function () {}
    },
    "SQLITE": {
      "attachDatabase": function () {},
      "createDatabase": function () {},
      "dropDatabase": function () {},
      "fromTable": function () {},
      "intoTable": function () {}
    },
    "WEBSQL": {
      "attachDatabase": function () {},
      "createDatabase": function () {},
      "dropDatabase": function () {}
    }
  },
  "exec": function () {},
  "fn": {
    "Boolean": function () {},
    "Date": function () {},
    "Number": function () {},
    "String": function () {}
  },
  "from": {
    "CSV": function () {},
    "FILE": function () {},
    "GEXF": function () {},
    "HTML": function () {},
    "INFORMATION_SCHEMA": function () {},
    "JSON": function () {},
    "METEOR": function () {},
    "ODS": function () {},
    "RANGE": function () {},
    "TAB": function () {},
    "TABLETOP": function () {},
    "TSV": function () {},
    "TXT": function () {},
    "XLS": function () {},
    "XLSX": function () {},
    "XML": function () {}
  },
  "into": {
    "CSV": function () {},
    "HTML": function () {},
    "JSON": function () {},
    "SQL": function () {},
    "TAB": function () {},
    "TSV": function () {},
    "TXT": function () {},
    "XLS": function () {},
    "XLSX": function () {},
    "XLSXML": function () {}
  },
  "lastid": {},
  "log": function () {},
  "options": {
    "autocommit": {},
    "autovertex": {},
    "cache": {},
    "casesensitive": {},
    "columnlookup": {},
    "datetimeformat": {},
    "dropifnotexists": {},
    "errorlog": {},
    "joinstar": {},
    "logprompt": {},
    "logtarget": {},
    "modifier": {},
    "mysql": {},
    "nan": {},
    "nocount": {},
    "oracle": {},
    "orientdb": {},
    "postgres": {},
    "progress": {},
    "sqlite": {},
    "tsql": {},
    "usedbo": {},
    "valueof": {}
  },
  "parse": function () {},
  "parser": {
    "Parser": function () {},
    "defaultActions": {
      "105": {},
      "1288": {},
      "1375": {},
      "1433": {},
      "1541": {},
      "1736": {},
      "1781": {},
      "1801": {},
      "1804": {},
      "1846": {},
      "1849": {},
      "1891": {},
      "194": {},
      "195": {},
      "196": {},
      "197": {},
      "198": {},
      "199": {},
      "200": {},
      "201": {},
      "202": {},
      "209": {},
      "591": {},
      "653": {},
      "654": {},
      "710": {},
      "780": {},
      "781": {},
      "926": {},
      "927": {},
      "928": {},
      "987": {}
    },
    "lexer": {
      "EOF": {},
      "_currentRules": function () {},
      "begin": function () {},
      "conditions": {
        "INITIAL": {
          "inclusive": {},
          "rules": {}
        }
      },
      "input": function () {},
      "less": function () {},
      "lex": function () {},
      "more": function () {},
      "next": function () {},
      "options": {
        "case-insensitive": {}
      },
      "parseError": function () {},
      "pastInput": function () {},
      "performAction": function () {},
      "popState": function () {},
      "pushState": function () {},
      "reject": function () {},
      "rules": {},
      "setInput": function () {},
      "showPosition": function () {},
      "stateStackSize": function () {},
      "test_match": function () {},
      "topState": function () {},
      "unput": function () {},
      "upcomingInput": function () {}
    },
    "parse": function () {},
    "parseError": function () {},
    "performAction": function () {},
    "productions_": {},
    "symbols_": {
      "$accept": {},
      "$end": {},
      "A": {},
      "ABSENT": {},
      "ABSOLUTE": {},
      "ACCORDING": {},
      "ACTION": {},
      "ADA": {},
      "ADD": {},
      "ADMIN": {},
      "AFTER": {},
      "AGGR": {},
      "AGGREGATE": {},
      "ALL": {},
      "ALTER": {},
      "ALWAYS": {},
      "AMPERSAND": {},
      "AND": {},
      "ANTI": {},
      "ANY": {},
      "APPLY": {},
      "ARRAY": {},
      "ARRAYLBRA": {},
      "ARROW": {},
      "AS": {},
      "ASC": {},
      "ASSERT": {},
      "ASSERTION": {},
      "ASSIGNMENT": {},
      "AStatement": {},
      "AT": {},
      "ATLBRA": {},
      "ATTACH": {},
      "ATTRIBUTE": {},
      "ATTRIBUTES": {},
      "AVG": {},
      "AddRule": {},
      "AggrValue": {},
      "Aggregator": {},
      "AllSome": {},
      "AlterTable": {},
      "ApplyClause": {},
      "ArrayValue": {},
      "ArrowDot": {},
      "AsClause": {},
      "AsList": {},
      "AsLiteral": {},
      "AsPart": {},
      "Assert": {},
      "AtDollar": {},
      "AttachDatabase": {},
      "BAR": {},
      "BARBAR": {},
      "BASE64": {},
      "BEFORE": {},
      "BEGIN": {},
      "BERNOULLI": {},
      "BETWEEN": {},
      "BLOCKED": {},
      "BOM": {},
      "BRALITERAL": {},
      "BRAQUESTION": {},
      "BREADTH": {},
      "BREAK": {},
      "BY": {},
      "BeforeAfter": {},
      "BeginEnd": {},
      "BeginTransaction": {},
      "Break": {},
      "C": {},
      "CALL": {},
      "CARET": {},
      "CASCADE": {},
      "CASE": {},
      "CAST": {},
      "CATALOG": {},
      "CATALOG_NAME": {},
      "CHAIN": {},
      "CHARACTERISTICS": {},
      "CHARACTERS": {},
      "CHARACTER_SET_CATALOG": {},
      "CHARACTER_SET_NAME": {},
      "CHARACTER_SET_SCHEMA": {},
      "CHECK": {},
      "CLASS": {},
      "CLASS_ORIGIN": {},
      "COBOL": {},
      "COLLATE": {},
      "COLLATION": {},
      "COLLATION_CATALOG": {},
      "COLLATION_NAME": {},
      "COLLATION_SCHEMA": {},
      "COLON": {},
      "COLONDASH": {},
      "COLUMN": {},
      "COLUMNS": {},
      "COLUMN_NAME": {},
      "COMMA": {},
      "COMMAND_FUNCTION": {},
      "COMMAND_FUNCTION_CODE": {},
      "COMMIT": {},
      "COMMITTED": {},
      "CONDITION_NUMBER": {},
      "CONNECTION": {},
      "CONNECTION_NAME": {},
      "CONSTRAINT": {},
      "CONSTRAINTS": {},
      "CONSTRAINT_CATALOG": {},
      "CONSTRAINT_NAME": {},
      "CONSTRAINT_SCHEMA": {},
      "CONSTRUCTOR": {},
      "CONTENT": {},
      "CONTINUE": {},
      "CONTROL": {},
      "CONVERT": {},
      "CORRESPONDING": {},
      "COUNT": {},
      "CREATE": {},
      "CROSS": {},
      "CUBE": {},
      "CURRENT_TIMESTAMP": {},
      "CURSOR_NAME": {},
      "Call": {},
      "CaseValue": {},
      "CastClause": {},
      "Check": {},
      "ColFunc": {},
      "ColonLiteral": {},
      "ColsList": {},
      "Column": {},
      "ColumnConstraint": {},
      "ColumnConstraint_option0": {},
      "ColumnConstraint_option1": {},
      "ColumnConstraints": {},
      "ColumnConstraintsClause": {},
      "ColumnConstraintsList": {},
      "ColumnDef": {},
      "ColumnDefsList": {},
      "ColumnType": {},
      "ColumnsList": {},
      "CommitTransaction": {},
      "CondOp": {},
      "Constraint": {},
      "ConstraintName": {},
      "ConstraintsList": {},
      "Continue": {},
      "CreateAggregate": {},
      "CreateDatabase": {},
      "CreateEdge": {},
      "CreateEdge_option0": {},
      "CreateFunction": {},
      "CreateGraph": {},
      "CreateIndex": {},
      "CreateTable": {},
      "CreateTableDefClause": {},
      "CreateTableOption": {},
      "CreateTableOptions": {},
      "CreateTableOptionsClause": {},
      "CreateTrigger": {},
      "CreateTrigger_option0": {},
      "CreateTrigger_option1": {},
      "CreateVertex": {},
      "CreateVertexSet": {},
      "CreateVertex_option0": {},
      "CreateVertex_option1": {},
      "CreateVertex_option2": {},
      "CreateView": {},
      "CreateView_option0": {},
      "CreateView_option1": {},
      "DATA": {},
      "DATABASE": {},
      "DATEADD": {},
      "DATEDIFF": {},
      "DATETIME_INTERVAL_CODE": {},
      "DATETIME_INTERVAL_PRECISION": {},
      "DB": {},
      "DECLARE": {},
      "DEFAULT": {},
      "DEFAULTS": {},
      "DEFERRABLE": {},
      "DEFERRED": {},
      "DEFINED": {},
      "DEFINER": {},
      "DEGREE": {},
      "DELETE": {},
      "DEPTH": {},
      "DERIVED": {},
      "DESC": {},
      "DESCRIPTOR": {},
      "DETACH": {},
      "DIAGNOSTICS": {},
      "DIRECTION": {},
      "DISPATCH": {},
      "DISTINCT": {},
      "DOCUMENT": {},
      "DOLLAR": {},
      "DOMAIN": {},
      "DOT": {},
      "DOTDOT": {},
      "DOUBLECOLON": {},
      "DROP": {},
      "DYNAMIC_FUNCTION": {},
      "DYNAMIC_FUNCTION_CODE": {},
      "DateValue": {},
      "Declare": {},
      "DeclareItem": {},
      "DeclaresList": {},
      "Delete": {},
      "DeleteEdge": {},
      "DeleteEdge_option0": {},
      "DeleteEdge_option1": {},
      "DeleteEdge_option2": {},
      "DeleteVertex": {},
      "DeleteVertex_option0": {},
      "DetachDatabase": {},
      "DropDatabase": {},
      "DropIndex": {},
      "DropTable": {},
      "DropTable_group0": {},
      "DropTrigger": {},
      "DropView": {},
      "ECHO": {},
      "EDGE": {},
      "ELSE": {},
      "EMPTY": {},
      "ENCODING": {},
      "END": {},
      "ENFORCED": {},
      "ENUM": {},
      "EOF": {},
      "EQ": {},
      "EQEQ": {},
      "EQEQEQ": {},
      "ESCAPE": {},
      "EXCEPT": {},
      "EXCLAMATION": {},
      "EXCLUDE": {},
      "EXCLUDING": {},
      "EXISTS": {},
      "EXPLAIN": {},
      "EXPRESSION": {},
      "Echo": {},
      "ElseClause": {},
      "ElseStatement": {},
      "EndTransaction": {},
      "ExistsValue": {},
      "ExplainStatement": {},
      "ExprList": {},
      "Expression": {},
      "ExpressionStatement": {},
      "Expression_group0": {},
      "FALSE": {},
      "FETCH": {},
      "FILE": {},
      "FINAL": {},
      "FIRST": {},
      "FLAG": {},
      "FOLLOWING": {},
      "FOR": {},
      "FOREIGN": {},
      "FORTRAN": {},
      "FOUND": {},
      "FROM": {},
      "FS": {},
      "FULL": {},
      "FUNCTION": {},
      "ForeignKey": {},
      "ForeignKey_option0": {},
      "FromClause": {},
      "FromString": {},
      "FromTable": {},
      "FromTable_option0": {},
      "FromTable_option1": {},
      "FromTablesList": {},
      "FuncValue": {},
      "FuncValue_option0": {},
      "FuncValue_option0_group0": {},
      "G": {},
      "GE": {},
      "GENERAL": {},
      "GENERATED": {},
      "GLOB": {},
      "GO": {},
      "GOTO": {},
      "GRANTED": {},
      "GRAPH": {},
      "GROUP": {},
      "GROUPING": {},
      "GT": {},
      "GTGT": {},
      "GraphAsClause": {},
      "GraphAtClause": {},
      "GraphElement": {},
      "GraphElement2": {},
      "GraphElement2_option0": {},
      "GraphElement2_option1": {},
      "GraphElement2_option2": {},
      "GraphElement2_option3": {},
      "GraphElementVar": {},
      "GraphElement_option0": {},
      "GraphElement_option1": {},
      "GraphElement_option2": {},
      "GraphElement_option3": {},
      "GraphElement_option4": {},
      "GraphElement_option5": {},
      "GraphList": {},
      "GraphVar": {},
      "GraphVertexEdge": {},
      "GraphVertexEdge_option0": {},
      "GraphVertexEdge_option1": {},
      "GraphVertexEdge_option2": {},
      "GraphVertexEdge_option3": {},
      "GraphVertexEdge_option4": {},
      "GroupClause": {},
      "GroupExpression": {},
      "GroupExpressionsList": {},
      "HAVING": {},
      "HEX": {},
      "HIERARCHY": {},
      "HavingClause": {},
      "ID": {},
      "IDENTITY": {},
      "IF": {},
      "IGNORE": {},
      "IMMEDIATE": {},
      "IMMEDIATELY": {},
      "IMPLEMENTATION": {},
      "IN": {},
      "INCLUDING": {},
      "INCREMENT": {},
      "INDENT": {},
      "INDEX": {},
      "INDEXED": {},
      "INITIALLY": {},
      "INNER": {},
      "INPUT": {},
      "INSERT": {},
      "INSERTED": {},
      "INSTANCE": {},
      "INSTANTIABLE": {},
      "INSTEAD": {},
      "INTEGRITY": {},
      "INTERSECT": {},
      "INTERVAL": {},
      "INTO": {},
      "INVOKER": {},
      "IS": {},
      "ISOLATION": {},
      "If": {},
      "IfExists": {},
      "IfNotExists": {},
      "IndexKey": {},
      "Insert": {},
      "InsertDeleteUpdate": {},
      "Into": {},
      "IntoClause": {},
      "JAVASCRIPT": {},
      "JOIN": {},
      "JavaScript": {},
      "JoinMode": {},
      "JoinModeMode": {},
      "JoinTable": {},
      "JoinTableAs": {},
      "JoinTableAs_option0": {},
      "JoinTableAs_option1": {},
      "JoinTablesList": {},
      "Json": {},
      "JsonArray": {},
      "JsonElementsList": {},
      "JsonObject": {},
      "JsonPrimitiveValue": {},
      "JsonPropertiesList": {},
      "JsonProperty": {},
      "JsonValue": {},
      "K": {},
      "KEY": {},
      "KEY_MEMBER": {},
      "KEY_TYPE": {},
      "LAST": {},
      "LCUR": {},
      "LE": {},
      "LEFT": {},
      "LENGTH": {},
      "LEVEL": {},
      "LIBRARY": {},
      "LIKE": {},
      "LIMIT": {},
      "LINK": {},
      "LITERAL": {},
      "LOCATION": {},
      "LOCATOR": {},
      "LPAR": {},
      "LT": {},
      "LTLT": {},
      "LimitClause": {},
      "LimitClause_option0": {},
      "LimitClause_option1": {},
      "LimitClause_option2": {},
      "LimitClause_option3": {},
      "Literal": {},
      "LiteralWithSpaces": {},
      "LogicValue": {},
      "M": {},
      "MAP": {},
      "MAPPING": {},
      "MATCHED": {},
      "MATRIX": {},
      "MAX": {},
      "MAXNUM": {},
      "MAXVALUE": {},
      "MERGE": {},
      "MESSAGE_LENGTH": {},
      "MESSAGE_OCTET_LENGTH": {},
      "MESSAGE_TEXT": {},
      "MIN": {},
      "MINUS": {},
      "MINVALUE": {},
      "MODIFY": {},
      "MODULO": {},
      "MORE": {},
      "MUMPS": {},
      "Merge": {},
      "MergeInto": {},
      "MergeMatched": {},
      "MergeMatchedAction": {},
      "MergeMatchedList": {},
      "MergeNotMatched": {},
      "MergeNotMatchedAction": {},
      "MergeOn": {},
      "MergeUsing": {},
      "NAME": {},
      "NAMES": {},
      "NAMESPACE": {},
      "NATURAL": {},
      "NE": {},
      "NEEQEQ": {},
      "NEEQEQEQ": {},
      "NESTING": {},
      "NEW": {},
      "NEXT": {},
      "NFC": {},
      "NFD": {},
      "NFKC": {},
      "NFKD": {},
      "NIL": {},
      "NO": {},
      "NOCASE": {},
      "NORMALIZED": {},
      "NOT": {},
      "NOT_BETWEEN": {},
      "NOT_LIKE": {},
      "NSTRING": {},
      "NULL": {},
      "NULLABLE": {},
      "NULLS": {},
      "NUMBER": {},
      "NewClause": {},
      "NonReserved": {},
      "NullValue": {},
      "NullsOrder": {},
      "NumValue": {},
      "NumberMax": {},
      "OBJECT": {},
      "OCTETS": {},
      "OF": {},
      "OFF": {},
      "OFFSET": {},
      "ON": {},
      "ONLY": {},
      "OPTION": {},
      "OPTIONS": {},
      "OR": {},
      "ORDER": {},
      "ORDERING": {},
      "ORDINALITY": {},
      "OTHERS": {},
      "OUTER": {},
      "OUTPUT": {},
      "OVER": {},
      "OVERRIDING": {},
      "OffsetClause": {},
      "OnClause": {},
      "OnDeleteClause": {},
      "OnForeignKeyClause": {},
      "OnOff": {},
      "OnUpdateClause": {},
      "Op": {},
      "OrderClause": {},
      "OrderExpression": {},
      "OrderExpressionsList": {},
      "OutputClause": {},
      "OverClause": {},
      "OverOrderByClause": {},
      "OverPartitionClause": {},
      "P": {},
      "PAD": {},
      "PARAMETER_MODE": {},
      "PARAMETER_NAME": {},
      "PARAMETER_ORDINAL_POSITION": {},
      "PARAMETER_SPECIFIC_CATALOG": {},
      "PARAMETER_SPECIFIC_NAME": {},
      "PARAMETER_SPECIFIC_SCHEMA": {},
      "PARTIAL": {},
      "PARTITION": {},
      "PASCAL": {},
      "PASSING": {},
      "PASSTHROUGH": {},
      "PATH": {},
      "PERCENT": {},
      "PERMISSION": {},
      "PIVOT": {},
      "PLACING": {},
      "PLAN": {},
      "PLI": {},
      "PLUS": {},
      "PRECEDING": {},
      "PRESERVE": {},
      "PRIMARY": {},
      "PRINT": {},
      "PRIOR": {},
      "PRIVILEGES": {},
      "PUBLIC": {},
      "ParColsList": {},
      "ParLiteral": {},
      "ParamValue": {},
      "ParamValue_group0": {},
      "PivotClause": {},
      "PivotClause2": {},
      "PivotClause_option0": {},
      "PivotClause_option1": {},
      "PivotClause_option2": {},
      "Plugin": {},
      "PluginsList": {},
      "PlusStar": {},
      "PrimaryKey": {},
      "PrimaryKey_option0": {},
      "PrimitiveValue": {},
      "Print": {},
      "QUERY": {},
      "QUESTION": {},
      "QUESTIONDASH": {},
      "Query": {},
      "RBRA": {},
      "RCUR": {},
      "READ": {},
      "RECORDSET": {},
      "RECOVERY": {},
      "REFERENCES": {},
      "REGEXP": {},
      "REINDEX": {},
      "RELATIVE": {},
      "REMOVE": {},
      "RENAME": {},
      "REPEAT": {},
      "REPEATABLE": {},
      "REPLACE": {},
      "REQUIRE": {},
      "REQUIRING": {},
      "RESPECT": {},
      "RESTART": {},
      "RESTORE": {},
      "RESTRICT": {},
      "RETURN": {},
      "RETURNED_CARDINALITY": {},
      "RETURNED_LENGTH": {},
      "RETURNED_OCTET_LENGTH": {},
      "RETURNED_SQLSTATE": {},
      "RETURNING": {},
      "RIGHT": {},
      "ROLE": {},
      "ROLLBACK": {},
      "ROLLUP": {},
      "ROUTINE": {},
      "ROUTINE_CATALOG": {},
      "ROUTINE_NAME": {},
      "ROUTINE_SCHEMA": {},
      "ROW": {},
      "ROWS": {},
      "ROW_COUNT": {},
      "RPAR": {},
      "Reindex": {},
      "RemoveClause": {},
      "RemoveClause_option0": {},
      "RemoveColumn": {},
      "RemoveColumnsList": {},
      "RenameTable": {},
      "Require": {},
      "ResultColumn": {},
      "ResultColumns": {},
      "RollbackTransaction": {},
      "SCALE": {},
      "SCHEMA": {},
      "SCHEMA_NAME": {},
      "SCOPE_CATALOG": {},
      "SCOPE_NAME": {},
      "SCOPE_SCHEMA": {},
      "SEARCH": {},
      "SECTION": {},
      "SECURITY": {},
      "SELECT": {},
      "SELECTIVE": {},
      "SELF": {},
      "SEMI": {},
      "SEMICOLON": {},
      "SEQUENCE": {},
      "SERIALIZABLE": {},
      "SERVER": {},
      "SERVER_NAME": {},
      "SESSION": {},
      "SET": {},
      "SETS": {},
      "SHARP": {},
      "SHOW": {},
      "SIMPLE": {},
      "SIZE": {},
      "SLASH": {},
      "SOME": {},
      "SOURCE": {},
      "SPACE": {},
      "SPECIFIC_NAME": {},
      "STANDALONE": {},
      "STAR": {},
      "STATE": {},
      "STATEMENT": {},
      "STRING": {},
      "STRIP": {},
      "STRUCTURE": {},
      "STYLE": {},
      "SUBCLASS_ORIGIN": {},
      "SUM": {},
      "SearchFrom": {},
      "SearchSelector": {},
      "SearchSelectorList": {},
      "SearchSelectorList_repetition0": {},
      "SearchSelectorList_repetition1": {},
      "SearchSelector_group0": {},
      "SearchSelector_option0": {},
      "SearchSelector_option1": {},
      "SearchSelector_repetition2": {},
      "SearchSelector_repetition3": {},
      "SearchSelector_repetition4": {},
      "SearchSelector_repetition5": {},
      "SearchSelector_repetition6": {},
      "SearchSelector_repetition7": {},
      "SearchSelector_repetition8": {},
      "SearchSelector_repetition_plus0": {},
      "SearchSelector_repetition_plus1": {},
      "Select": {},
      "SelectClause": {},
      "SelectClause_option0": {},
      "SelectModifier": {},
      "Select_option0": {},
      "Select_option1": {},
      "Select_option2": {},
      "Select_repetition0": {},
      "SetColumn": {},
      "SetColumn_group0": {},
      "SetColumnsList": {},
      "SetProp": {},
      "SetPropsList": {},
      "SetVariable": {},
      "SharpLiteral": {},
      "SharpValue": {},
      "ShowColumns": {},
      "ShowCreateTable": {},
      "ShowDatabases": {},
      "ShowIndex": {},
      "ShowTables": {},
      "SingularColumnType": {},
      "Source": {},
      "Star": {},
      "Statement": {},
      "Statements": {},
      "Statements_group0": {},
      "StringValue": {},
      "StringValuesList": {},
      "SubqueryRestriction": {},
      "T": {},
      "TABLE": {},
      "TABLE_NAME": {},
      "TARGET": {},
      "TEMP": {},
      "TEMPORARY": {},
      "TEXTSTRING": {},
      "THEN": {},
      "TIES": {},
      "TILDA": {},
      "TO": {},
      "TOKEN": {},
      "TOP": {},
      "TOP_LEVEL_COUNT": {},
      "TRANSACTION": {},
      "TRANSACTIONS_COMMITTED": {},
      "TRANSACTIONS_ROLLED_BACK": {},
      "TRANSACTION_ACTIVE": {},
      "TRANSFORM": {},
      "TRANSFORMS": {},
      "TRIGGER": {},
      "TRIGGER_CATALOG": {},
      "TRIGGER_NAME": {},
      "TRIGGER_SCHEMA": {},
      "TRUE": {},
      "TRUNCATE": {},
      "TYPE": {},
      "Table": {},
      "TableClass": {},
      "TablesList": {},
      "TemporaryClause": {},
      "Term": {},
      "TermsList": {},
      "TopClause": {},
      "TopClause_option0": {},
      "TruncateTable": {},
      "UNBOUNDED": {},
      "UNCOMMITTED": {},
      "UNDER": {},
      "UNION": {},
      "UNIQUE": {},
      "UNLINK": {},
      "UNNAMED": {},
      "UNPIVOT": {},
      "UNTYPED": {},
      "UPDATE": {},
      "URI": {},
      "USAGE": {},
      "USE": {},
      "USER_DEFINED_TYPE_CATALOG": {},
      "USER_DEFINED_TYPE_CODE": {},
      "USER_DEFINED_TYPE_NAME": {},
      "USER_DEFINED_TYPE_SCHEMA": {},
      "USING": {},
      "UnionClause": {},
      "UniqueKey": {},
      "UniqueKey_option0": {},
      "UniqueKey_option1": {},
      "Update": {},
      "UseDatabase": {},
      "VALID": {},
      "VALUE": {},
      "VALUES": {},
      "VERSION": {},
      "VERTEX": {},
      "VIEW": {},
      "Value": {},
      "Values": {},
      "ValuesList": {},
      "ValuesListsList": {},
      "VarValue": {},
      "WHEN": {},
      "WHERE": {},
      "WHILE": {},
      "WHITESPACE": {},
      "WITH": {},
      "WORK": {},
      "WRAPPER": {},
      "WRITE": {},
      "When": {},
      "WhensList": {},
      "WhereClause": {},
      "While": {},
      "WithSelect": {},
      "WithTable": {},
      "WithTablesList": {},
      "XMLDECLARATION": {},
      "XMLSCHEMA": {},
      "YES": {},
      "ZONE": {},
      "error": {},
      "main": {}
    },
    "table": {},
    "terminals_": {
      "10": {},
      "107": {},
      "112": {},
      "115": {},
      "116": {},
      "118": {},
      "119": {},
      "122": {},
      "123": {},
      "124": {},
      "128": {},
      "129": {},
      "130": {},
      "131": {},
      "132": {},
      "133": {},
      "134": {},
      "135": {},
      "136": {},
      "137": {},
      "138": {},
      "139": {},
      "14": {},
      "140": {},
      "141": {},
      "142": {},
      "143": {},
      "145": {},
      "146": {},
      "148": {},
      "149": {},
      "15": {},
      "150": {},
      "152": {},
      "154": {},
      "156": {},
      "16": {},
      "162": {},
      "164": {},
      "166": {},
      "168": {},
      "169": {},
      "170": {},
      "171": {},
      "172": {},
      "173": {},
      "175": {},
      "179": {},
      "180": {},
      "181": {},
      "183": {},
      "185": {},
      "187": {},
      "189": {},
      "190": {},
      "191": {},
      "192": {},
      "193": {},
      "194": {},
      "195": {},
      "198": {},
      "2": {},
      "206": {},
      "207": {},
      "208": {},
      "212": {},
      "213": {},
      "222": {},
      "223": {},
      "224": {},
      "225": {},
      "226": {},
      "227": {},
      "228": {},
      "229": {},
      "230": {},
      "231": {},
      "232": {},
      "236": {},
      "237": {},
      "238": {},
      "239": {},
      "240": {},
      "243": {},
      "244": {},
      "245": {},
      "246": {},
      "247": {},
      "248": {},
      "249": {},
      "251": {},
      "253": {},
      "269": {},
      "270": {},
      "271": {},
      "272": {},
      "273": {},
      "274": {},
      "275": {},
      "277": {},
      "280": {},
      "283": {},
      "284": {},
      "285": {},
      "286": {},
      "287": {},
      "288": {},
      "289": {},
      "290": {},
      "292": {},
      "293": {},
      "294": {},
      "295": {},
      "296": {},
      "297": {},
      "298": {},
      "299": {},
      "300": {},
      "301": {},
      "302": {},
      "304": {},
      "305": {},
      "308": {},
      "310": {},
      "311": {},
      "312": {},
      "313": {},
      "314": {},
      "315": {},
      "316": {},
      "317": {},
      "318": {},
      "319": {},
      "320": {},
      "321": {},
      "322": {},
      "323": {},
      "324": {},
      "325": {},
      "326": {},
      "327": {},
      "328": {},
      "332": {},
      "333": {},
      "334": {},
      "335": {},
      "336": {},
      "337": {},
      "340": {},
      "341": {},
      "345": {},
      "346": {},
      "349": {},
      "355": {},
      "358": {},
      "359": {},
      "369": {},
      "370": {},
      "371": {},
      "372": {},
      "375": {},
      "376": {},
      "382": {},
      "383": {},
      "388": {},
      "391": {},
      "392": {},
      "398": {},
      "4": {},
      "402": {},
      "403": {},
      "404": {},
      "405": {},
      "406": {},
      "407": {},
      "408": {},
      "410": {},
      "411": {},
      "412": {},
      "416": {},
      "417": {},
      "418": {},
      "419": {},
      "420": {},
      "422": {},
      "426": {},
      "428": {},
      "435": {},
      "436": {},
      "437": {},
      "438": {},
      "439": {},
      "441": {},
      "442": {},
      "443": {},
      "444": {},
      "445": {},
      "449": {},
      "450": {},
      "453": {},
      "454": {},
      "462": {},
      "465": {},
      "466": {},
      "472": {},
      "474": {},
      "5": {},
      "507": {},
      "509": {},
      "510": {},
      "511": {},
      "516": {},
      "517": {},
      "518": {},
      "519": {},
      "520": {},
      "521": {},
      "522": {},
      "523": {},
      "524": {},
      "525": {},
      "526": {},
      "527": {},
      "528": {},
      "529": {},
      "53": {},
      "530": {},
      "531": {},
      "532": {},
      "533": {},
      "534": {},
      "535": {},
      "536": {},
      "537": {},
      "538": {},
      "539": {},
      "540": {},
      "541": {},
      "542": {},
      "543": {},
      "544": {},
      "545": {},
      "546": {},
      "547": {},
      "548": {},
      "549": {},
      "550": {},
      "551": {},
      "552": {},
      "553": {},
      "554": {},
      "555": {},
      "556": {},
      "557": {},
      "558": {},
      "559": {},
      "560": {},
      "561": {},
      "562": {},
      "563": {},
      "564": {},
      "565": {},
      "566": {},
      "567": {},
      "568": {},
      "569": {},
      "570": {},
      "571": {},
      "572": {},
      "573": {},
      "574": {},
      "575": {},
      "576": {},
      "577": {},
      "578": {},
      "579": {},
      "580": {},
      "581": {},
      "582": {},
      "583": {},
      "584": {},
      "585": {},
      "586": {},
      "587": {},
      "588": {},
      "589": {},
      "590": {},
      "591": {},
      "592": {},
      "593": {},
      "594": {},
      "595": {},
      "596": {},
      "597": {},
      "598": {},
      "599": {},
      "600": {},
      "601": {},
      "602": {},
      "603": {},
      "604": {},
      "605": {},
      "606": {},
      "607": {},
      "608": {},
      "609": {},
      "610": {},
      "611": {},
      "612": {},
      "613": {},
      "614": {},
      "615": {},
      "616": {},
      "617": {},
      "618": {},
      "619": {},
      "620": {},
      "621": {},
      "622": {},
      "623": {},
      "624": {},
      "625": {},
      "626": {},
      "627": {},
      "628": {},
      "629": {},
      "630": {},
      "631": {},
      "632": {},
      "633": {},
      "634": {},
      "635": {},
      "636": {},
      "637": {},
      "638": {},
      "639": {},
      "640": {},
      "641": {},
      "642": {},
      "643": {},
      "644": {},
      "645": {},
      "646": {},
      "647": {},
      "648": {},
      "649": {},
      "650": {},
      "651": {},
      "652": {},
      "653": {},
      "654": {},
      "655": {},
      "656": {},
      "657": {},
      "658": {},
      "659": {},
      "660": {},
      "661": {},
      "662": {},
      "663": {},
      "664": {},
      "665": {},
      "666": {},
      "667": {},
      "668": {},
      "669": {},
      "670": {},
      "671": {},
      "672": {},
      "673": {},
      "674": {},
      "675": {},
      "676": {},
      "677": {},
      "678": {},
      "679": {},
      "680": {},
      "681": {},
      "682": {},
      "683": {},
      "684": {},
      "685": {},
      "686": {},
      "687": {},
      "688": {},
      "689": {},
      "690": {},
      "691": {},
      "692": {},
      "693": {},
      "694": {},
      "695": {},
      "696": {},
      "697": {},
      "698": {},
      "699": {},
      "700": {},
      "701": {},
      "702": {},
      "703": {},
      "704": {},
      "705": {},
      "706": {},
      "707": {},
      "708": {},
      "709": {},
      "710": {},
      "711": {},
      "712": {},
      "713": {},
      "714": {},
      "715": {},
      "716": {},
      "717": {},
      "718": {},
      "719": {},
      "72": {},
      "720": {},
      "721": {},
      "722": {},
      "723": {},
      "724": {},
      "725": {},
      "726": {},
      "727": {},
      "728": {},
      "729": {},
      "730": {},
      "731": {},
      "732": {},
      "733": {},
      "734": {},
      "735": {},
      "736": {},
      "737": {},
      "738": {},
      "739": {},
      "74": {},
      "740": {},
      "741": {},
      "742": {},
      "743": {},
      "744": {},
      "745": {},
      "746": {},
      "747": {},
      "748": {},
      "749": {},
      "750": {},
      "751": {},
      "752": {},
      "753": {},
      "754": {},
      "755": {},
      "756": {},
      "757": {},
      "758": {},
      "759": {},
      "76": {},
      "760": {},
      "761": {},
      "762": {},
      "763": {},
      "764": {},
      "765": {},
      "766": {},
      "767": {},
      "77": {},
      "78": {},
      "89": {},
      "93": {},
      "95": {},
      "98": {},
      "99": {}
    },
    "trace": function () {},
    "yy": {
      "AggrValue": function () {},
      "AlterTable": function () {},
      "Apply": function () {},
      "ArrayValue": function () {},
      "Assert": function () {},
      "AttachDatabase": function () {},
      "Base": function () {},
      "BeginEnd": function () {},
      "BeginTransaction": function () {},
      "Break": function () {},
      "CaseValue": function () {},
      "Column": function () {},
      "ColumnDef": function () {},
      "CommitTransaction": function () {},
      "Continue": function () {},
      "Convert": function () {},
      "CreateDatabase": function () {},
      "CreateEdge": function () {},
      "CreateGraph": function () {},
      "CreateIndex": function () {},
      "CreateTable": function () {},
      "CreateTrigger": function () {},
      "CreateVertex": function () {},
      "Declare": function () {},
      "Delete": function () {},
      "DetachDatabase": function () {},
      "DomainValueValue": function () {},
      "DropDatabase": function () {},
      "DropIndex": function () {},
      "DropTable": function () {},
      "DropTrigger": function () {},
      "ExistsValue": function () {},
      "Expression": function () {},
      "ExpressionStatement": function () {},
      "FromData": function () {},
      "FuncValue": function () {},
      "GroupExpression": function () {},
      "If": function () {},
      "Insert": function () {},
      "JavaScript": function () {},
      "Join": function () {},
      "Json": function () {},
      "Literal": function () {},
      "LogicValue": function () {},
      "Merge": function () {},
      "NullValue": function () {},
      "NumValue": function () {},
      "Op": function () {},
      "OrderExpression": function () {},
      "Over": function () {},
      "ParamValue": function () {},
      "Print": function () {},
      "Reindex": function () {},
      "Require": function () {},
      "RollbackTransaction": function () {},
      "Search": function () {},
      "Select": function () {},
      "SetColumn": function () {},
      "SetVariable": function () {},
      "ShowColumns": function () {},
      "ShowCreateTable": function () {},
      "ShowDatabases": function () {},
      "ShowIndex": function () {},
      "ShowTables": function () {},
      "Source": function () {},
      "Statements": function () {},
      "StringValue": function () {},
      "Table": function () {},
      "TruncateTable": function () {},
      "UniOp": function () {},
      "Union": function () {},
      "Update": function () {},
      "UseDatabase": function () {},
      "VarValue": function () {},
      "View": function () {},
      "While": function () {},
      "WithSelect": function () {},
      "casesensitive": {},
      "extend": function () {}
    }
  },
  "path": {},
  "plugins": {},
  "precompile": function () {},
  "prepareFromData": function () {},
  "pretty": function () {},
  "prettyflag": {},
  "private": {
    "externalXlsxLib": {}
  },
  "promise": function () {},
  "prompt": function () {},
  "prompthistory": {},
  "setXLSX": function () {},
  "srch": {
    "APROP": function () {},
    "AS": function () {},
    "AT": function () {},
    "ATTR": function () {},
    "CHILD": function () {},
    "CLASS": function () {},
    "CLONEDEEP": function () {},
    "CONTENT": function () {},
    "D3": function () {},
    "EDGE": function () {},
    "EQ": function () {},
    "EX": function () {},
    "IN": function () {},
    "ININ": function () {},
    "INSTANCEOF": function () {},
    "KEYS": function () {},
    "LIKE": function () {},
    "NAME": function () {},
    "ORDERBY": function () {},
    "OUT": function () {},
    "OUTOUT": function () {},
    "PARENT": function () {},
    "PROP": function () {},
    "REF": function () {},
    "RETURN": function () {},
    "ROW": function () {},
    "SET": function () {},
    "SHARP": function () {},
    "VERTEX": function () {},
    "WHERE": function () {}
  },
  "stdfn": {
    "ADDDATE": function () {},
    "ASCII": function () {},
    "CHAR": function () {},
    "COALESCE": function () {},
    "CONCAT": function () {},
    "CONCAT_WS": function () {},
    "CONVERT": function () {},
    "CURRENT_TIMESTAMP": function () {},
    "DATE": function () {},
    "DATEADD": function () {},
    "DATEDIFF": function () {},
    "DATE_ADD": function () {},
    "DATE_SUB": function () {},
    "DAY": function () {},
    "DAYOFMONTH": function () {},
    "DAYOFWEEK": function () {},
    "EXTEND": function () {},
    "GEN_RANDOM_UUID": function () {},
    "GETDATE": function () {},
    "HOUR": function () {},
    "INTERVAL": function () {},
    "MINUTE": function () {},
    "MONTH": function () {},
    "NEWID": function () {},
    "NOW": function () {},
    "OBJECT_ID": function () {},
    "REGEXP_LIKE": function () {},
    "REPLACE": function () {},
    "SECOND": function () {},
    "SUBDATE": function () {},
    "USER": function () {},
    "UUID": function () {},
    "WEEKDAY": function () {},
    "YEAR": function () {}
  },
  "stdlib": {
    "ABS": function () {},
    "CEIL": function () {},
    "CEILING": function () {},
    "CLONEDEEP": function () {},
    "EXP": function () {},
    "FLOOR": function () {},
    "GREATEST": function () {},
    "IFNULL": function () {},
    "IIF": function () {},
    "INSTR": function () {},
    "ISNULL": function () {},
    "LCASE": function () {},
    "LEAST": function () {},
    "LEN": function () {},
    "LENGTH": function () {},
    "LOWER": function () {},
    "LTRIM": function () {},
    "MAX": function () {},
    "MID": function () {},
    "MIN": function () {},
    "NULLIF": function () {},
    "POWER": function () {},
    "RANDOM": function () {},
    "ROUND": function () {},
    "ROWNUM": function () {},
    "ROW_NUMBER": function () {},
    "RTRIM": function () {},
    "SQRT": function () {},
    "SUBSTR": function () {},
    "SUBSTRING": function () {},
    "TRIM": function () {},
    "UCASE": function () {},
    "UPPER": function () {}
  },
  "tables": {},
  "test": function () {},
  "use": function () {},
  "useid": {},
  "utils": {
    "JSONtoString": function () {},
    "arrayDiff": function () {},
    "arrayExceptDeep": function () {},
    "arrayIntersect": function () {},
    "arrayIntersectDeep": function () {},
    "arrayOfArrays": function () {},
    "arrayUnion": function () {},
    "arrayUnionDeep": function () {},
    "autoExtFilename": function () {},
    "cloneDeep": function () {},
    "deepEqual": function () {},
    "deleteFile": function () {},
    "distinctArray": function () {},
    "domEmptyChildren": function () {},
    "doubleq": function () {},
    "doubleqq": function () {},
    "escapeq": function () {},
    "extend": function () {},
    "fileExists": function () {},
    "findAlaSQLPath": function () {},
    "flatArray": function () {},
    "glob": function () {},
    "global": {
      "addEventListener": function () {},
      "alasql": {
        "DEFAULTDATABASEID": {},
        "Database": function () {},
        "MAXSQLCACHESIZE": {},
        "Query": function () {},
        "Recordset": function () {},
        "Table": function () {},
        "Transaction": function () {},
        "View": function () {},
        "_aggrOriginal": {
          "GROUP_CONCAT": function () {},
          "MEDIAN": function () {},
          "QUART": function () {},
          "QUART2": function () {},
          "QUART3": function () {},
          "STD": function () {},
          "STDDEV": function () {},
          "STDEV": function () {},
          "STDEVP": function () {},
          "VAR": function () {},
          "VARP": function () {}
        },
        "adrun": function () {},
        "aggr": {
          "GROUP_CONCAT": function () {},
          "MEDIAN": function () {},
          "QUART": function () {},
          "QUART2": function () {},
          "QUART3": function () {},
          "STD": function () {},
          "STDDEV": function () {},
          "STDEV": function () {},
          "STDEVP": function () {},
          "VAR": function () {},
          "VARP": function () {}
        },
        "autoval": function () {},
        "buffer": {},
        "busy": {},
        "clear": function () {},
        "compile": function () {},
        "databasenum": {},
        "databases": {
          "alasql": {
            "autoval": function () {},
            "counter": {},
            "databaseid": {},
            "dbversion": {},
            "exec": function () {},
            "indices": {},
            "objects": {},
            "resetSqlCache": function () {},
            "sqlCache": {},
            "sqlCacheSize": {},
            "tables": {},
            "transaction": function () {},
            "triggers": {},
            "views": {}
          },
          "dbo": {
            "autoval": function () {},
            "counter": {},
            "databaseid": {},
            "dbversion": {},
            "exec": function () {},
            "indices": {},
            "objects": {},
            "resetSqlCache": function () {},
            "sqlCache": {},
            "sqlCacheSize": {},
            "tables": {},
            "transaction": function () {},
            "triggers": {},
            "views": {}
          }
        },
        "debug": {},
        "declares": {},
        "dexec": function () {},
        "drun": function () {},
        "engines": {
          "FILE": {
            "attachDatabase": function () {},
            "begin": function () {},
            "commit": function () {},
            "createDatabase": function () {},
            "createTable": function () {},
            "dropDatabase": function () {},
            "dropTable": function () {},
            "fromTable": function () {},
            "intoTable": function () {},
            "loadTableData": function () {},
            "rollback": function () {},
            "saveTableData": function () {},
            "updateFile": function () {}
          },
          "FILESTORAGE": {
            "attachDatabase": function () {},
            "begin": function () {},
            "commit": function () {},
            "createDatabase": function () {},
            "createTable": function () {},
            "dropDatabase": function () {},
            "dropTable": function () {},
            "fromTable": function () {},
            "intoTable": function () {},
            "loadTableData": function () {},
            "rollback": function () {},
            "saveTableData": function () {},
            "updateFile": function () {}
          },
          "INDEXEDDB": {
            "attachDatabase": function () {},
            "createDatabase": function () {},
            "createTable": function () {},
            "deleteFromTable": function () {},
            "dropDatabase": function () {},
            "dropTable": function () {},
            "fromTable": function () {},
            "getDatabaseNames": function () {},
            "getDatabaseNamesNotSupported": {},
            "intoTable": function () {},
            "showDatabases": function () {},
            "updateTable": function () {}
          },
          "LOCALSTORAGE": {
            "attachDatabase": function () {},
            "begin": function () {},
            "commit": function () {},
            "createDatabase": function () {},
            "createTable": function () {},
            "dropDatabase": function () {},
            "dropTable": function () {},
            "fromTable": function () {},
            "get": function () {},
            "intoTable": function () {},
            "loadTableData": function () {},
            "removeTable": function () {},
            "restoreTable": function () {},
            "rollback": function () {},
            "saveTableData": function () {},
            "set": function () {},
            "showDatabases": function () {},
            "storeTable": function () {},
            "truncateTable": function () {}
          },
          "SQLITE": {
            "attachDatabase": function () {},
            "createDatabase": function () {},
            "dropDatabase": function () {},
            "fromTable": function () {},
            "intoTable": function () {}
          },
          "WEBSQL": {
            "attachDatabase": function () {},
            "createDatabase": function () {},
            "dropDatabase": function () {}
          }
        },
        "exec": function () {},
        "fn": {
          "Boolean": function () {},
          "Date": function () {},
          "Number": function () {},
          "String": function () {}
        },
        "from": {
          "CSV": function () {},
          "FILE": function () {},
          "GEXF": function () {},
          "HTML": function () {},
          "INFORMATION_SCHEMA": function () {},
          "JSON": function () {},
          "METEOR": function () {},
          "ODS": function () {},
          "RANGE": function () {},
          "TAB": function () {},
          "TABLETOP": function () {},
          "TSV": function () {},
          "TXT": function () {},
          "XLS": function () {},
          "XLSX": function () {},
          "XML": function () {}
        },
        "into": {
          "CSV": function () {},
          "HTML": function () {},
          "JSON": function () {},
          "SQL": function () {},
          "TAB": function () {},
          "TSV": function () {},
          "TXT": function () {},
          "XLS": function () {},
          "XLSX": function () {},
          "XLSXML": function () {}
        },
        "lastid": {},
        "log": function () {},
        "options": {
          "autocommit": {},
          "autovertex": {},
          "cache": {},
          "casesensitive": {},
          "columnlookup": {},
          "datetimeformat": {},
          "dropifnotexists": {},
          "errorlog": {},
          "joinstar": {},
          "logprompt": {},
          "logtarget": {},
          "modifier": {},
          "mysql": {},
          "nan": {},
          "nocount": {},
          "oracle": {},
          "orientdb": {},
          "postgres": {},
          "progress": {},
          "sqlite": {},
          "tsql": {},
          "usedbo": {},
          "valueof": {}
        },
        "parse": function () {},
        "parser": {
          "Parser": function () {},
          "defaultActions": {
            "105": {},
            "1288": {},
            "1375": {},
            "1433": {},
            "1541": {},
            "1736": {},
            "1781": {},
            "1801": {},
            "1804": {},
            "1846": {},
            "1849": {},
            "1891": {},
            "194": {},
            "195": {},
            "196": {},
            "197": {},
            "198": {},
            "199": {},
            "200": {},
            "201": {},
            "202": {},
            "209": {},
            "591": {},
            "653": {},
            "654": {},
            "710": {},
            "780": {},
            "781": {},
            "926": {},
            "927": {},
            "928": {},
            "987": {}
          },
          "lexer": {
            "EOF": {},
            "_currentRules": function () {},
            "begin": function () {},
            "conditions": {
              "INITIAL": {
                "inclusive": {},
                "rules": {}
              }
            },
            "input": function () {},
            "less": function () {},
            "lex": function () {},
            "more": function () {},
            "next": function () {},
            "options": {
              "case-insensitive": {}
            },
            "parseError": function () {},
            "pastInput": function () {},
            "performAction": function () {},
            "popState": function () {},
            "pushState": function () {},
            "reject": function () {},
            "rules": {},
            "setInput": function () {},
            "showPosition": function () {},
            "stateStackSize": function () {},
            "test_match": function () {},
            "topState": function () {},
            "unput": function () {},
            "upcomingInput": function () {}
          },
          "parse": function () {},
          "parseError": function () {},
          "performAction": function () {},
          "productions_": {},
          "symbols_": {
            "$accept": {},
            "$end": {},
            "A": {},
            "ABSENT": {},
            "ABSOLUTE": {},
            "ACCORDING": {},
            "ACTION": {},
            "ADA": {},
            "ADD": {},
            "ADMIN": {},
            "AFTER": {},
            "AGGR": {},
            "AGGREGATE": {},
            "ALL": {},
            "ALTER": {},
            "ALWAYS": {},
            "AMPERSAND": {},
            "AND": {},
            "ANTI": {},
            "ANY": {},
            "APPLY": {},
            "ARRAY": {},
            "ARRAYLBRA": {},
            "ARROW": {},
            "AS": {},
            "ASC": {},
            "ASSERT": {},
            "ASSERTION": {},
            "ASSIGNMENT": {},
            "AStatement": {},
            "AT": {},
            "ATLBRA": {},
            "ATTACH": {},
            "ATTRIBUTE": {},
            "ATTRIBUTES": {},
            "AVG": {},
            "AddRule": {},
            "AggrValue": {},
            "Aggregator": {},
            "AllSome": {},
            "AlterTable": {},
            "ApplyClause": {},
            "ArrayValue": {},
            "ArrowDot": {},
            "AsClause": {},
            "AsList": {},
            "AsLiteral": {},
            "AsPart": {},
            "Assert": {},
            "AtDollar": {},
            "AttachDatabase": {},
            "BAR": {},
            "BARBAR": {},
            "BASE64": {},
            "BEFORE": {},
            "BEGIN": {},
            "BERNOULLI": {},
            "BETWEEN": {},
            "BLOCKED": {},
            "BOM": {},
            "BRALITERAL": {},
            "BRAQUESTION": {},
            "BREADTH": {},
            "BREAK": {},
            "BY": {},
            "BeforeAfter": {},
            "BeginEnd": {},
            "BeginTransaction": {},
            "Break": {},
            "C": {},
            "CALL": {},
            "CARET": {},
            "CASCADE": {},
            "CASE": {},
            "CAST": {},
            "CATALOG": {},
            "CATALOG_NAME": {},
            "CHAIN": {},
            "CHARACTERISTICS": {},
            "CHARACTERS": {},
            "CHARACTER_SET_CATALOG": {},
            "CHARACTER_SET_NAME": {},
            "CHARACTER_SET_SCHEMA": {},
            "CHECK": {},
            "CLASS": {},
            "CLASS_ORIGIN": {},
            "COBOL": {},
            "COLLATE": {},
            "COLLATION": {},
            "COLLATION_CATALOG": {},
            "COLLATION_NAME": {},
            "COLLATION_SCHEMA": {},
            "COLON": {},
            "COLONDASH": {},
            "COLUMN": {},
            "COLUMNS": {},
            "COLUMN_NAME": {},
            "COMMA": {},
            "COMMAND_FUNCTION": {},
            "COMMAND_FUNCTION_CODE": {},
            "COMMIT": {},
            "COMMITTED": {},
            "CONDITION_NUMBER": {},
            "CONNECTION": {},
            "CONNECTION_NAME": {},
            "CONSTRAINT": {},
            "CONSTRAINTS": {},
            "CONSTRAINT_CATALOG": {},
            "CONSTRAINT_NAME": {},
            "CONSTRAINT_SCHEMA": {},
            "CONSTRUCTOR": {},
            "CONTENT": {},
            "CONTINUE": {},
            "CONTROL": {},
            "CONVERT": {},
            "CORRESPONDING": {},
            "COUNT": {},
            "CREATE": {},
            "CROSS": {},
            "CUBE": {},
            "CURRENT_TIMESTAMP": {},
            "CURSOR_NAME": {},
            "Call": {},
            "CaseValue": {},
            "CastClause": {},
            "Check": {},
            "ColFunc": {},
            "ColonLiteral": {},
            "ColsList": {},
            "Column": {},
            "ColumnConstraint": {},
            "ColumnConstraint_option0": {},
            "ColumnConstraint_option1": {},
            "ColumnConstraints": {},
            "ColumnConstraintsClause": {},
            "ColumnConstraintsList": {},
            "ColumnDef": {},
            "ColumnDefsList": {},
            "ColumnType": {},
            "ColumnsList": {},
            "CommitTransaction": {},
            "CondOp": {},
            "Constraint": {},
            "ConstraintName": {},
            "ConstraintsList": {},
            "Continue": {},
            "CreateAggregate": {},
            "CreateDatabase": {},
            "CreateEdge": {},
            "CreateEdge_option0": {},
            "CreateFunction": {},
            "CreateGraph": {},
            "CreateIndex": {},
            "CreateTable": {},
            "CreateTableDefClause": {},
            "CreateTableOption": {},
            "CreateTableOptions": {},
            "CreateTableOptionsClause": {},
            "CreateTrigger": {},
            "CreateTrigger_option0": {},
            "CreateTrigger_option1": {},
            "CreateVertex": {},
            "CreateVertexSet": {},
            "CreateVertex_option0": {},
            "CreateVertex_option1": {},
            "CreateVertex_option2": {},
            "CreateView": {},
            "CreateView_option0": {},
            "CreateView_option1": {},
            "DATA": {},
            "DATABASE": {},
            "DATEADD": {},
            "DATEDIFF": {},
            "DATETIME_INTERVAL_CODE": {},
            "DATETIME_INTERVAL_PRECISION": {},
            "DB": {},
            "DECLARE": {},
            "DEFAULT": {},
            "DEFAULTS": {},
            "DEFERRABLE": {},
            "DEFERRED": {},
            "DEFINED": {},
            "DEFINER": {},
            "DEGREE": {},
            "DELETE": {},
            "DEPTH": {},
            "DERIVED": {},
            "DESC": {},
            "DESCRIPTOR": {},
            "DETACH": {},
            "DIAGNOSTICS": {},
            "DIRECTION": {},
            "DISPATCH": {},
            "DISTINCT": {},
            "DOCUMENT": {},
            "DOLLAR": {},
            "DOMAIN": {},
            "DOT": {},
            "DOTDOT": {},
            "DOUBLECOLON": {},
            "DROP": {},
            "DYNAMIC_FUNCTION": {},
            "DYNAMIC_FUNCTION_CODE": {},
            "DateValue": {},
            "Declare": {},
            "DeclareItem": {},
            "DeclaresList": {},
            "Delete": {},
            "DeleteEdge": {},
            "DeleteEdge_option0": {},
            "DeleteEdge_option1": {},
            "DeleteEdge_option2": {},
            "DeleteVertex": {},
            "DeleteVertex_option0": {},
            "DetachDatabase": {},
            "DropDatabase": {},
            "DropIndex": {},
            "DropTable": {},
            "DropTable_group0": {},
            "DropTrigger": {},
            "DropView": {},
            "ECHO": {},
            "EDGE": {},
            "ELSE": {},
            "EMPTY": {},
            "ENCODING": {},
            "END": {},
            "ENFORCED": {},
            "ENUM": {},
            "EOF": {},
            "EQ": {},
            "EQEQ": {},
            "EQEQEQ": {},
            "ESCAPE": {},
            "EXCEPT": {},
            "EXCLAMATION": {},
            "EXCLUDE": {},
            "EXCLUDING": {},
            "EXISTS": {},
            "EXPLAIN": {},
            "EXPRESSION": {},
            "Echo": {},
            "ElseClause": {},
            "ElseStatement": {},
            "EndTransaction": {},
            "ExistsValue": {},
            "ExplainStatement": {},
            "ExprList": {},
            "Expression": {},
            "ExpressionStatement": {},
            "Expression_group0": {},
            "FALSE": {},
            "FETCH": {},
            "FILE": {},
            "FINAL": {},
            "FIRST": {},
            "FLAG": {},
            "FOLLOWING": {},
            "FOR": {},
            "FOREIGN": {},
            "FORTRAN": {},
            "FOUND": {},
            "FROM": {},
            "FS": {},
            "FULL": {},
            "FUNCTION": {},
            "ForeignKey": {},
            "ForeignKey_option0": {},
            "FromClause": {},
            "FromString": {},
            "FromTable": {},
            "FromTable_option0": {},
            "FromTable_option1": {},
            "FromTablesList": {},
            "FuncValue": {},
            "FuncValue_option0": {},
            "FuncValue_option0_group0": {},
            "G": {},
            "GE": {},
            "GENERAL": {},
            "GENERATED": {},
            "GLOB": {},
            "GO": {},
            "GOTO": {},
            "GRANTED": {},
            "GRAPH": {},
            "GROUP": {},
            "GROUPING": {},
            "GT": {},
            "GTGT": {},
            "GraphAsClause": {},
            "GraphAtClause": {},
            "GraphElement": {},
            "GraphElement2": {},
            "GraphElement2_option0": {},
            "GraphElement2_option1": {},
            "GraphElement2_option2": {},
            "GraphElement2_option3": {},
            "GraphElementVar": {},
            "GraphElement_option0": {},
            "GraphElement_option1": {},
            "GraphElement_option2": {},
            "GraphElement_option3": {},
            "GraphElement_option4": {},
            "GraphElement_option5": {},
            "GraphList": {},
            "GraphVar": {},
            "GraphVertexEdge": {},
            "GraphVertexEdge_option0": {},
            "GraphVertexEdge_option1": {},
            "GraphVertexEdge_option2": {},
            "GraphVertexEdge_option3": {},
            "GraphVertexEdge_option4": {},
            "GroupClause": {},
            "GroupExpression": {},
            "GroupExpressionsList": {},
            "HAVING": {},
            "HEX": {},
            "HIERARCHY": {},
            "HavingClause": {},
            "ID": {},
            "IDENTITY": {},
            "IF": {},
            "IGNORE": {},
            "IMMEDIATE": {},
            "IMMEDIATELY": {},
            "IMPLEMENTATION": {},
            "IN": {},
            "INCLUDING": {},
            "INCREMENT": {},
            "INDENT": {},
            "INDEX": {},
            "INDEXED": {},
            "INITIALLY": {},
            "INNER": {},
            "INPUT": {},
            "INSERT": {},
            "INSERTED": {},
            "INSTANCE": {},
            "INSTANTIABLE": {},
            "INSTEAD": {},
            "INTEGRITY": {},
            "INTERSECT": {},
            "INTERVAL": {},
            "INTO": {},
            "INVOKER": {},
            "IS": {},
            "ISOLATION": {},
            "If": {},
            "IfExists": {},
            "IfNotExists": {},
            "IndexKey": {},
            "Insert": {},
            "InsertDeleteUpdate": {},
            "Into": {},
            "IntoClause": {},
            "JAVASCRIPT": {},
            "JOIN": {},
            "JavaScript": {},
            "JoinMode": {},
            "JoinModeMode": {},
            "JoinTable": {},
            "JoinTableAs": {},
            "JoinTableAs_option0": {},
            "JoinTableAs_option1": {},
            "JoinTablesList": {},
            "Json": {},
            "JsonArray": {},
            "JsonElementsList": {},
            "JsonObject": {},
            "JsonPrimitiveValue": {},
            "JsonPropertiesList": {},
            "JsonProperty": {},
            "JsonValue": {},
            "K": {},
            "KEY": {},
            "KEY_MEMBER": {},
            "KEY_TYPE": {},
            "LAST": {},
            "LCUR": {},
            "LE": {},
            "LEFT": {},
            "LENGTH": {},
            "LEVEL": {},
            "LIBRARY": {},
            "LIKE": {},
            "LIMIT": {},
            "LINK": {},
            "LITERAL": {},
            "LOCATION": {},
            "LOCATOR": {},
            "LPAR": {},
            "LT": {},
            "LTLT": {},
            "LimitClause": {},
            "LimitClause_option0": {},
            "LimitClause_option1": {},
            "LimitClause_option2": {},
            "LimitClause_option3": {},
            "Literal": {},
            "LiteralWithSpaces": {},
            "LogicValue": {},
            "M": {},
            "MAP": {},
            "MAPPING": {},
            "MATCHED": {},
            "MATRIX": {},
            "MAX": {},
            "MAXNUM": {},
            "MAXVALUE": {},
            "MERGE": {},
            "MESSAGE_LENGTH": {},
            "MESSAGE_OCTET_LENGTH": {},
            "MESSAGE_TEXT": {},
            "MIN": {},
            "MINUS": {},
            "MINVALUE": {},
            "MODIFY": {},
            "MODULO": {},
            "MORE": {},
            "MUMPS": {},
            "Merge": {},
            "MergeInto": {},
            "MergeMatched": {},
            "MergeMatchedAction": {},
            "MergeMatchedList": {},
            "MergeNotMatched": {},
            "MergeNotMatchedAction": {},
            "MergeOn": {},
            "MergeUsing": {},
            "NAME": {},
            "NAMES": {},
            "NAMESPACE": {},
            "NATURAL": {},
            "NE": {},
            "NEEQEQ": {},
            "NEEQEQEQ": {},
            "NESTING": {},
            "NEW": {},
            "NEXT": {},
            "NFC": {},
            "NFD": {},
            "NFKC": {},
            "NFKD": {},
            "NIL": {},
            "NO": {},
            "NOCASE": {},
            "NORMALIZED": {},
            "NOT": {},
            "NOT_BETWEEN": {},
            "NOT_LIKE": {},
            "NSTRING": {},
            "NULL": {},
            "NULLABLE": {},
            "NULLS": {},
            "NUMBER": {},
            "NewClause": {},
            "NonReserved": {},
            "NullValue": {},
            "NullsOrder": {},
            "NumValue": {},
            "NumberMax": {},
            "OBJECT": {},
            "OCTETS": {},
            "OF": {},
            "OFF": {},
            "OFFSET": {},
            "ON": {},
            "ONLY": {},
            "OPTION": {},
            "OPTIONS": {},
            "OR": {},
            "ORDER": {},
            "ORDERING": {},
            "ORDINALITY": {},
            "OTHERS": {},
            "OUTER": {},
            "OUTPUT": {},
            "OVER": {},
            "OVERRIDING": {},
            "OffsetClause": {},
            "OnClause": {},
            "OnDeleteClause": {},
            "OnForeignKeyClause": {},
            "OnOff": {},
            "OnUpdateClause": {},
            "Op": {},
            "OrderClause": {},
            "OrderExpression": {},
            "OrderExpressionsList": {},
            "OutputClause": {},
            "OverClause": {},
            "OverOrderByClause": {},
            "OverPartitionClause": {},
            "P": {},
            "PAD": {},
            "PARAMETER_MODE": {},
            "PARAMETER_NAME": {},
            "PARAMETER_ORDINAL_POSITION": {},
            "PARAMETER_SPECIFIC_CATALOG": {},
            "PARAMETER_SPECIFIC_NAME": {},
            "PARAMETER_SPECIFIC_SCHEMA": {},
            "PARTIAL": {},
            "PARTITION": {},
            "PASCAL": {},
            "PASSING": {},
            "PASSTHROUGH": {},
            "PATH": {},
            "PERCENT": {},
            "PERMISSION": {},
            "PIVOT": {},
            "PLACING": {},
            "PLAN": {},
            "PLI": {},
            "PLUS": {},
            "PRECEDING": {},
            "PRESERVE": {},
            "PRIMARY": {},
            "PRINT": {},
            "PRIOR": {},
            "PRIVILEGES": {},
            "PUBLIC": {},
            "ParColsList": {},
            "ParLiteral": {},
            "ParamValue": {},
            "ParamValue_group0": {},
            "PivotClause": {},
            "PivotClause2": {},
            "PivotClause_option0": {},
            "PivotClause_option1": {},
            "PivotClause_option2": {},
            "Plugin": {},
            "PluginsList": {},
            "PlusStar": {},
            "PrimaryKey": {},
            "PrimaryKey_option0": {},
            "PrimitiveValue": {},
            "Print": {},
            "QUERY": {},
            "QUESTION": {},
            "QUESTIONDASH": {},
            "Query": {},
            "RBRA": {},
            "RCUR": {},
            "READ": {},
            "RECORDSET": {},
            "RECOVERY": {},
            "REFERENCES": {},
            "REGEXP": {},
            "REINDEX": {},
            "RELATIVE": {},
            "REMOVE": {},
            "RENAME": {},
            "REPEAT": {},
            "REPEATABLE": {},
            "REPLACE": {},
            "REQUIRE": {},
            "REQUIRING": {},
            "RESPECT": {},
            "RESTART": {},
            "RESTORE": {},
            "RESTRICT": {},
            "RETURN": {},
            "RETURNED_CARDINALITY": {},
            "RETURNED_LENGTH": {},
            "RETURNED_OCTET_LENGTH": {},
            "RETURNED_SQLSTATE": {},
            "RETURNING": {},
            "RIGHT": {},
            "ROLE": {},
            "ROLLBACK": {},
            "ROLLUP": {},
            "ROUTINE": {},
            "ROUTINE_CATALOG": {},
            "ROUTINE_NAME": {},
            "ROUTINE_SCHEMA": {},
            "ROW": {},
            "ROWS": {},
            "ROW_COUNT": {},
            "RPAR": {},
            "Reindex": {},
            "RemoveClause": {},
            "RemoveClause_option0": {},
            "RemoveColumn": {},
            "RemoveColumnsList": {},
            "RenameTable": {},
            "Require": {},
            "ResultColumn": {},
            "ResultColumns": {},
            "RollbackTransaction": {},
            "SCALE": {},
            "SCHEMA": {},
            "SCHEMA_NAME": {},
            "SCOPE_CATALOG": {},
            "SCOPE_NAME": {},
            "SCOPE_SCHEMA": {},
            "SEARCH": {},
            "SECTION": {},
            "SECURITY": {},
            "SELECT": {},
            "SELECTIVE": {},
            "SELF": {},
            "SEMI": {},
            "SEMICOLON": {},
            "SEQUENCE": {},
            "SERIALIZABLE": {},
            "SERVER": {},
            "SERVER_NAME": {},
            "SESSION": {},
            "SET": {},
            "SETS": {},
            "SHARP": {},
            "SHOW": {},
            "SIMPLE": {},
            "SIZE": {},
            "SLASH": {},
            "SOME": {},
            "SOURCE": {},
            "SPACE": {},
            "SPECIFIC_NAME": {},
            "STANDALONE": {},
            "STAR": {},
            "STATE": {},
            "STATEMENT": {},
            "STRING": {},
            "STRIP": {},
            "STRUCTURE": {},
            "STYLE": {},
            "SUBCLASS_ORIGIN": {},
            "SUM": {},
            "SearchFrom": {},
            "SearchSelector": {},
            "SearchSelectorList": {},
            "SearchSelectorList_repetition0": {},
            "SearchSelectorList_repetition1": {},
            "SearchSelector_group0": {},
            "SearchSelector_option0": {},
            "SearchSelector_option1": {},
            "SearchSelector_repetition2": {},
            "SearchSelector_repetition3": {},
            "SearchSelector_repetition4": {},
            "SearchSelector_repetition5": {},
            "SearchSelector_repetition6": {},
            "SearchSelector_repetition7": {},
            "SearchSelector_repetition8": {},
            "SearchSelector_repetition_plus0": {},
            "SearchSelector_repetition_plus1": {},
            "Select": {},
            "SelectClause": {},
            "SelectClause_option0": {},
            "SelectModifier": {},
            "Select_option0": {},
            "Select_option1": {},
            "Select_option2": {},
            "Select_repetition0": {},
            "SetColumn": {},
            "SetColumn_group0": {},
            "SetColumnsList": {},
            "SetProp": {},
            "SetPropsList": {},
            "SetVariable": {},
            "SharpLiteral": {},
            "SharpValue": {},
            "ShowColumns": {},
            "ShowCreateTable": {},
            "ShowDatabases": {},
            "ShowIndex": {},
            "ShowTables": {},
            "SingularColumnType": {},
            "Source": {},
            "Star": {},
            "Statement": {},
            "Statements": {},
            "Statements_group0": {},
            "StringValue": {},
            "StringValuesList": {},
            "SubqueryRestriction": {},
            "T": {},
            "TABLE": {},
            "TABLE_NAME": {},
            "TARGET": {},
            "TEMP": {},
            "TEMPORARY": {},
            "TEXTSTRING": {},
            "THEN": {},
            "TIES": {},
            "TILDA": {},
            "TO": {},
            "TOKEN": {},
            "TOP": {},
            "TOP_LEVEL_COUNT": {},
            "TRANSACTION": {},
            "TRANSACTIONS_COMMITTED": {},
            "TRANSACTIONS_ROLLED_BACK": {},
            "TRANSACTION_ACTIVE": {},
            "TRANSFORM": {},
            "TRANSFORMS": {},
            "TRIGGER": {},
            "TRIGGER_CATALOG": {},
            "TRIGGER_NAME": {},
            "TRIGGER_SCHEMA": {},
            "TRUE": {},
            "TRUNCATE": {},
            "TYPE": {},
            "Table": {},
            "TableClass": {},
            "TablesList": {},
            "TemporaryClause": {},
            "Term": {},
            "TermsList": {},
            "TopClause": {},
            "TopClause_option0": {},
            "TruncateTable": {},
            "UNBOUNDED": {},
            "UNCOMMITTED": {},
            "UNDER": {},
            "UNION": {},
            "UNIQUE": {},
            "UNLINK": {},
            "UNNAMED": {},
            "UNPIVOT": {},
            "UNTYPED": {},
            "UPDATE": {},
            "URI": {},
            "USAGE": {},
            "USE": {},
            "USER_DEFINED_TYPE_CATALOG": {},
            "USER_DEFINED_TYPE_CODE": {},
            "USER_DEFINED_TYPE_NAME": {},
            "USER_DEFINED_TYPE_SCHEMA": {},
            "USING": {},
            "UnionClause": {},
            "UniqueKey": {},
            "UniqueKey_option0": {},
            "UniqueKey_option1": {},
            "Update": {},
            "UseDatabase": {},
            "VALID": {},
            "VALUE": {},
            "VALUES": {},
            "VERSION": {},
            "VERTEX": {},
            "VIEW": {},
            "Value": {},
            "Values": {},
            "ValuesList": {},
            "ValuesListsList": {},
            "VarValue": {},
            "WHEN": {},
            "WHERE": {},
            "WHILE": {},
            "WHITESPACE": {},
            "WITH": {},
            "WORK": {},
            "WRAPPER": {},
            "WRITE": {},
            "When": {},
            "WhensList": {},
            "WhereClause": {},
            "While": {},
            "WithSelect": {},
            "WithTable": {},
            "WithTablesList": {},
            "XMLDECLARATION": {},
            "XMLSCHEMA": {},
            "YES": {},
            "ZONE": {},
            "error": {},
            "main": {}
          },
          "table": {},
          "terminals_": {
            "10": {},
            "107": {},
            "112": {},
            "115": {},
            "116": {},
            "118": {},
            "119": {},
            "122": {},
            "123": {},
            "124": {},
            "128": {},
            "129": {},
            "130": {},
            "131": {},
            "132": {},
            "133": {},
            "134": {},
            "135": {},
            "136": {},
            "137": {},
            "138": {},
            "139": {},
            "14": {},
            "140": {},
            "141": {},
            "142": {},
            "143": {},
            "145": {},
            "146": {},
            "148": {},
            "149": {},
            "15": {},
            "150": {},
            "152": {},
            "154": {},
            "156": {},
            "16": {},
            "162": {},
            "164": {},
            "166": {},
            "168": {},
            "169": {},
            "170": {},
            "171": {},
            "172": {},
            "173": {},
            "175": {},
            "179": {},
            "180": {},
            "181": {},
            "183": {},
            "185": {},
            "187": {},
            "189": {},
            "190": {},
            "191": {},
            "192": {},
            "193": {},
            "194": {},
            "195": {},
            "198": {},
            "2": {},
            "206": {},
            "207": {},
            "208": {},
            "212": {},
            "213": {},
            "222": {},
            "223": {},
            "224": {},
            "225": {},
            "226": {},
            "227": {},
            "228": {},
            "229": {},
            "230": {},
            "231": {},
            "232": {},
            "236": {},
            "237": {},
            "238": {},
            "239": {},
            "240": {},
            "243": {},
            "244": {},
            "245": {},
            "246": {},
            "247": {},
            "248": {},
            "249": {},
            "251": {},
            "253": {},
            "269": {},
            "270": {},
            "271": {},
            "272": {},
            "273": {},
            "274": {},
            "275": {},
            "277": {},
            "280": {},
            "283": {},
            "284": {},
            "285": {},
            "286": {},
            "287": {},
            "288": {},
            "289": {},
            "290": {},
            "292": {},
            "293": {},
            "294": {},
            "295": {},
            "296": {},
            "297": {},
            "298": {},
            "299": {},
            "300": {},
            "301": {},
            "302": {},
            "304": {},
            "305": {},
            "308": {},
            "310": {},
            "311": {},
            "312": {},
            "313": {},
            "314": {},
            "315": {},
            "316": {},
            "317": {},
            "318": {},
            "319": {},
            "320": {},
            "321": {},
            "322": {},
            "323": {},
            "324": {},
            "325": {},
            "326": {},
            "327": {},
            "328": {},
            "332": {},
            "333": {},
            "334": {},
            "335": {},
            "336": {},
            "337": {},
            "340": {},
            "341": {},
            "345": {},
            "346": {},
            "349": {},
            "355": {},
            "358": {},
            "359": {},
            "369": {},
            "370": {},
            "371": {},
            "372": {},
            "375": {},
            "376": {},
            "382": {},
            "383": {},
            "388": {},
            "391": {},
            "392": {},
            "398": {},
            "4": {},
            "402": {},
            "403": {},
            "404": {},
            "405": {},
            "406": {},
            "407": {},
            "408": {},
            "410": {},
            "411": {},
            "412": {},
            "416": {},
            "417": {},
            "418": {},
            "419": {},
            "420": {},
            "422": {},
            "426": {},
            "428": {},
            "435": {},
            "436": {},
            "437": {},
            "438": {},
            "439": {},
            "441": {},
            "442": {},
            "443": {},
            "444": {},
            "445": {},
            "449": {},
            "450": {},
            "453": {},
            "454": {},
            "462": {},
            "465": {},
            "466": {},
            "472": {},
            "474": {},
            "5": {},
            "507": {},
            "509": {},
            "510": {},
            "511": {},
            "516": {},
            "517": {},
            "518": {},
            "519": {},
            "520": {},
            "521": {},
            "522": {},
            "523": {},
            "524": {},
            "525": {},
            "526": {},
            "527": {},
            "528": {},
            "529": {},
            "53": {},
            "530": {},
            "531": {},
            "532": {},
            "533": {},
            "534": {},
            "535": {},
            "536": {},
            "537": {},
            "538": {},
            "539": {},
            "540": {},
            "541": {},
            "542": {},
            "543": {},
            "544": {},
            "545": {},
            "546": {},
            "547": {},
            "548": {},
            "549": {},
            "550": {},
            "551": {},
            "552": {},
            "553": {},
            "554": {},
            "555": {},
            "556": {},
            "557": {},
            "558": {},
            "559": {},
            "560": {},
            "561": {},
            "562": {},
            "563": {},
            "564": {},
            "565": {},
            "566": {},
            "567": {},
            "568": {},
            "569": {},
            "570": {},
            "571": {},
            "572": {},
            "573": {},
            "574": {},
            "575": {},
            "576": {},
            "577": {},
            "578": {},
            "579": {},
            "580": {},
            "581": {},
            "582": {},
            "583": {},
            "584": {},
            "585": {},
            "586": {},
            "587": {},
            "588": {},
            "589": {},
            "590": {},
            "591": {},
            "592": {},
            "593": {},
            "594": {},
            "595": {},
            "596": {},
            "597": {},
            "598": {},
            "599": {},
            "600": {},
            "601": {},
            "602": {},
            "603": {},
            "604": {},
            "605": {},
            "606": {},
            "607": {},
            "608": {},
            "609": {},
            "610": {},
            "611": {},
            "612": {},
            "613": {},
            "614": {},
            "615": {},
            "616": {},
            "617": {},
            "618": {},
            "619": {},
            "620": {},
            "621": {},
            "622": {},
            "623": {},
            "624": {},
            "625": {},
            "626": {},
            "627": {},
            "628": {},
            "629": {},
            "630": {},
            "631": {},
            "632": {},
            "633": {},
            "634": {},
            "635": {},
            "636": {},
            "637": {},
            "638": {},
            "639": {},
            "640": {},
            "641": {},
            "642": {},
            "643": {},
            "644": {},
            "645": {},
            "646": {},
            "647": {},
            "648": {},
            "649": {},
            "650": {},
            "651": {},
            "652": {},
            "653": {},
            "654": {},
            "655": {},
            "656": {},
            "657": {},
            "658": {},
            "659": {},
            "660": {},
            "661": {},
            "662": {},
            "663": {},
            "664": {},
            "665": {},
            "666": {},
            "667": {},
            "668": {},
            "669": {},
            "670": {},
            "671": {},
            "672": {},
            "673": {},
            "674": {},
            "675": {},
            "676": {},
            "677": {},
            "678": {},
            "679": {},
            "680": {},
            "681": {},
            "682": {},
            "683": {},
            "684": {},
            "685": {},
            "686": {},
            "687": {},
            "688": {},
            "689": {},
            "690": {},
            "691": {},
            "692": {},
            "693": {},
            "694": {},
            "695": {},
            "696": {},
            "697": {},
            "698": {},
            "699": {},
            "700": {},
            "701": {},
            "702": {},
            "703": {},
            "704": {},
            "705": {},
            "706": {},
            "707": {},
            "708": {},
            "709": {},
            "710": {},
            "711": {},
            "712": {},
            "713": {},
            "714": {},
            "715": {},
            "716": {},
            "717": {},
            "718": {},
            "719": {},
            "72": {},
            "720": {},
            "721": {},
            "722": {},
            "723": {},
            "724": {},
            "725": {},
            "726": {},
            "727": {},
            "728": {},
            "729": {},
            "730": {},
            "731": {},
            "732": {},
            "733": {},
            "734": {},
            "735": {},
            "736": {},
            "737": {},
            "738": {},
            "739": {},
            "74": {},
            "740": {},
            "741": {},
            "742": {},
            "743": {},
            "744": {},
            "745": {},
            "746": {},
            "747": {},
            "748": {},
            "749": {},
            "750": {},
            "751": {},
            "752": {},
            "753": {},
            "754": {},
            "755": {},
            "756": {},
            "757": {},
            "758": {},
            "759": {},
            "76": {},
            "760": {},
            "761": {},
            "762": {},
            "763": {},
            "764": {},
            "765": {},
            "766": {},
            "767": {},
            "77": {},
            "78": {},
            "89": {},
            "93": {},
            "95": {},
            "98": {},
            "99": {}
          },
          "trace": function () {},
          "yy": {
            "AggrValue": function () {},
            "AlterTable": function () {},
            "Apply": function () {},
            "ArrayValue": function () {},
            "Assert": function () {},
            "AttachDatabase": function () {},
            "Base": function () {},
            "BeginEnd": function () {},
            "BeginTransaction": function () {},
            "Break": function () {},
            "CaseValue": function () {},
            "Column": function () {},
            "ColumnDef": function () {},
            "CommitTransaction": function () {},
            "Continue": function () {},
            "Convert": function () {},
            "CreateDatabase": function () {},
            "CreateEdge": function () {},
            "CreateGraph": function () {},
            "CreateIndex": function () {},
            "CreateTable": function () {},
            "CreateTrigger": function () {},
            "CreateVertex": function () {},
            "Declare": function () {},
            "Delete": function () {},
            "DetachDatabase": function () {},
            "DomainValueValue": function () {},
            "DropDatabase": function () {},
            "DropIndex": function () {},
            "DropTable": function () {},
            "DropTrigger": function () {},
            "ExistsValue": function () {},
            "Expression": function () {},
            "ExpressionStatement": function () {},
            "FromData": function () {},
            "FuncValue": function () {},
            "GroupExpression": function () {},
            "If": function () {},
            "Insert": function () {},
            "JavaScript": function () {},
            "Join": function () {},
            "Json": function () {},
            "Literal": function () {},
            "LogicValue": function () {},
            "Merge": function () {},
            "NullValue": function () {},
            "NumValue": function () {},
            "Op": function () {},
            "OrderExpression": function () {},
            "Over": function () {},
            "ParamValue": function () {},
            "Print": function () {},
            "Reindex": function () {},
            "Require": function () {},
            "RollbackTransaction": function () {},
            "Search": function () {},
            "Select": function () {},
            "SetColumn": function () {},
            "SetVariable": function () {},
            "ShowColumns": function () {},
            "ShowCreateTable": function () {},
            "ShowDatabases": function () {},
            "ShowIndex": function () {},
            "ShowTables": function () {},
            "Source": function () {},
            "Statements": function () {},
            "StringValue": function () {},
            "Table": function () {},
            "TruncateTable": function () {},
            "UniOp": function () {},
            "Union": function () {},
            "Update": function () {},
            "UseDatabase": function () {},
            "VarValue": function () {},
            "View": function () {},
            "While": function () {},
            "WithSelect": function () {},
            "casesensitive": {},
            "extend": function () {}
          }
        },
        "path": {},
        "plugins": {},
        "precompile": function () {},
        "prepareFromData": function () {},
        "pretty": function () {},
        "prettyflag": {},
        "private": {
          "externalXlsxLib": {}
        },
        "promise": function () {},
        "prompt": function () {},
        "prompthistory": {},
        "setXLSX": function () {},
        "srch": {
          "APROP": function () {},
          "AS": function () {},
          "AT": function () {},
          "ATTR": function () {},
          "CHILD": function () {},
          "CLASS": function () {},
          "CLONEDEEP": function () {},
          "CONTENT": function () {},
          "D3": function () {},
          "EDGE": function () {},
          "EQ": function () {},
          "EX": function () {},
          "IN": function () {},
          "ININ": function () {},
          "INSTANCEOF": function () {},
          "KEYS": function () {},
          "LIKE": function () {},
          "NAME": function () {},
          "ORDERBY": function () {},
          "OUT": function () {},
          "OUTOUT": function () {},
          "PARENT": function () {},
          "PROP": function () {},
          "REF": function () {},
          "RETURN": function () {},
          "ROW": function () {},
          "SET": function () {},
          "SHARP": function () {},
          "VERTEX": function () {},
          "WHERE": function () {}
        },
        "stdfn": {
          "ADDDATE": function () {},
          "ASCII": function () {},
          "CHAR": function () {},
          "COALESCE": function () {},
          "CONCAT": function () {},
          "CONCAT_WS": function () {},
          "CONVERT": function () {},
          "CURRENT_TIMESTAMP": function () {},
          "DATE": function () {},
          "DATEADD": function () {},
          "DATEDIFF": function () {},
          "DATE_ADD": function () {},
          "DATE_SUB": function () {},
          "DAY": function () {},
          "DAYOFMONTH": function () {},
          "DAYOFWEEK": function () {},
          "EXTEND": function () {},
          "GEN_RANDOM_UUID": function () {},
          "GETDATE": function () {},
          "HOUR": function () {},
          "INTERVAL": function () {},
          "MINUTE": function () {},
          "MONTH": function () {},
          "NEWID": function () {},
          "NOW": function () {},
          "OBJECT_ID": function () {},
          "REGEXP_LIKE": function () {},
          "REPLACE": function () {},
          "SECOND": function () {},
          "SUBDATE": function () {},
          "USER": function () {},
          "UUID": function () {},
          "WEEKDAY": function () {},
          "YEAR": function () {}
        },
        "stdlib": {
          "ABS": function () {},
          "CEIL": function () {},
          "CEILING": function () {},
          "CLONEDEEP": function () {},
          "EXP": function () {},
          "FLOOR": function () {},
          "GREATEST": function () {},
          "IFNULL": function () {},
          "IIF": function () {},
          "INSTR": function () {},
          "ISNULL": function () {},
          "LCASE": function () {},
          "LEAST": function () {},
          "LEN": function () {},
          "LENGTH": function () {},
          "LOWER": function () {},
          "LTRIM": function () {},
          "MAX": function () {},
          "MID": function () {},
          "MIN": function () {},
          "NULLIF": function () {},
          "POWER": function () {},
          "RANDOM": function () {},
          "ROUND": function () {},
          "ROWNUM": function () {},
          "ROW_NUMBER": function () {},
          "RTRIM": function () {},
          "SQRT": function () {},
          "SUBSTR": function () {},
          "SUBSTRING": function () {},
          "TRIM": function () {},
          "UCASE": function () {},
          "UPPER": function () {}
        },
        "tables": {},
        "test": function () {},
        "use": function () {},
        "useid": {},
        "utils": {},
        "vars": {},
        "version": {},
        "worker": function () {},
        "write": function () {},
        "yy": {
          "AggrValue": function () {},
          "AlterTable": function () {},
          "Apply": function () {},
          "ArrayValue": function () {},
          "Assert": function () {},
          "AttachDatabase": function () {},
          "Base": function () {},
          "BeginEnd": function () {},
          "BeginTransaction": function () {},
          "Break": function () {},
          "CaseValue": function () {},
          "Column": function () {},
          "ColumnDef": function () {},
          "CommitTransaction": function () {},
          "Continue": function () {},
          "Convert": function () {},
          "CreateDatabase": function () {},
          "CreateEdge": function () {},
          "CreateGraph": function () {},
          "CreateIndex": function () {},
          "CreateTable": function () {},
          "CreateTrigger": function () {},
          "CreateVertex": function () {},
          "Declare": function () {},
          "Delete": function () {},
          "DetachDatabase": function () {},
          "DomainValueValue": function () {},
          "DropDatabase": function () {},
          "DropIndex": function () {},
          "DropTable": function () {},
          "DropTrigger": function () {},
          "ExistsValue": function () {},
          "Expression": function () {},
          "ExpressionStatement": function () {},
          "FromData": function () {},
          "FuncValue": function () {},
          "GroupExpression": function () {},
          "If": function () {},
          "Insert": function () {},
          "JavaScript": function () {},
          "Join": function () {},
          "Json": function () {},
          "Literal": function () {},
          "LogicValue": function () {},
          "Merge": function () {},
          "NullValue": function () {},
          "NumValue": function () {},
          "Op": function () {},
          "OrderExpression": function () {},
          "Over": function () {},
          "ParamValue": function () {},
          "Print": function () {},
          "Reindex": function () {},
          "Require": function () {},
          "RollbackTransaction": function () {},
          "Search": function () {},
          "Select": function () {},
          "SetColumn": function () {},
          "SetVariable": function () {},
          "ShowColumns": function () {},
          "ShowCreateTable": function () {},
          "ShowDatabases": function () {},
          "ShowIndex": function () {},
          "ShowTables": function () {},
          "Source": function () {},
          "Statements": function () {},
          "StringValue": function () {},
          "Table": function () {},
          "TruncateTable": function () {},
          "UniOp": function () {},
          "Union": function () {},
          "Update": function () {},
          "UseDatabase": function () {},
          "VarValue": function () {},
          "View": function () {},
          "While": function () {},
          "WithSelect": function () {},
          "casesensitive": {},
          "extend": function () {}
        }
      },
      "alert": function () {},
      "applicationCache": {
        "CHECKING": {},
        "DOWNLOADING": {},
        "IDLE": {},
        "OBSOLETE": {},
        "UNCACHED": {},
        "UPDATEREADY": {},
        "abort": function () {},
        "addEventListener": function () {},
        "dispatchEvent": function () {},
        "oncached": {},
        "onchecking": {},
        "ondownloading": {},
        "onerror": {},
        "onnoupdate": {},
        "onobsolete": {},
        "onprogress": {},
        "onupdateready": {},
        "removeEventListener": function () {},
        "status": {},
        "swapCache": function () {},
        "update": function () {}
      },
      "atob": function () {},
      "blur": function () {},
      "btoa": function () {},
      "cancelAnimationFrame": function () {},
      "captureEvents": function () {},
      "clearInterval": function () {},
      "clearTimeout": function () {},
      "clientInformation": {
        "appCodeName": {},
        "appName": {},
        "appVersion": {},
        "cookieEnabled": {},
        "geolocation": {
          "clearWatch": function () {},
          "getCurrentPosition": function () {},
          "watchPosition": function () {}
        },
        "getGamepads": function () {},
        "getStorageUpdates": function () {},
        "javaEnabled": function () {},
        "language": {},
        "languages": {},
        "maxTouchPoints": {},
        "mediaCapabilities": {
          "decodingInfo": function () {}
        },
        "mimeTypes": {
          "0": {
            "description": {},
            "enabledPlugin": {
              "0": {},
              "1": {
                "description": {},
                "enabledPlugin": {},
                "suffixes": {},
                "type": {}
              },
              "2": {
                "description": {},
                "enabledPlugin": {},
                "suffixes": {},
                "type": {}
              },
              "description": {},
              "filename": {},
              "item": function () {},
              "length": {},
              "name": {},
              "namedItem": function () {}
            },
            "suffixes": {},
            "type": {}
          },
          "1": {
            "description": {},
            "enabledPlugin": {
              "0": {
                "description": {},
                "enabledPlugin": {},
                "suffixes": {},
                "type": {}
              },
              "1": {},
              "2": {
                "description": {},
                "enabledPlugin": {},
                "suffixes": {},
                "type": {}
              },
              "description": {},
              "filename": {},
              "item": function () {},
              "length": {},
              "name": {},
              "namedItem": function () {}
            },
            "suffixes": {},
            "type": {}
          },
          "2": {
            "description": {},
            "enabledPlugin": {
              "0": {
                "description": {},
                "enabledPlugin": {},
                "suffixes": {},
                "type": {}
              },
              "1": {
                "description": {},
                "enabledPlugin": {},
                "suffixes": {},
                "type": {}
              },
              "2": {},
              "description": {},
              "filename": {},
              "item": function () {},
              "length": {},
              "name": {},
              "namedItem": function () {}
            },
            "suffixes": {},
            "type": {}
          },
          "item": function () {},
          "length": {},
          "namedItem": function () {}
        },
        "onLine": {},
        "platform": {},
        "plugins": {
          "0": {
            "0": {
              "description": {},
              "enabledPlugin": {},
              "suffixes": {},
              "type": {}
            },
            "1": {
              "description": {},
              "enabledPlugin": {},
              "suffixes": {},
              "type": {}
            },
            "2": {
              "description": {},
              "enabledPlugin": {},
              "suffixes": {},
              "type": {}
            },
            "description": {},
            "filename": {},
            "item": function () {},
            "length": {},
            "name": {},
            "namedItem": function () {}
          },
          "item": function () {},
          "length": {},
          "namedItem": function () {},
          "refresh": function () {}
        },
        "product": {},
        "productSub": {},
        "requestMediaKeySystemAccess": function () {},
        "sendBeacon": function () {},
        "userAgent": {},
        "vendor": {},
        "vendorSub": {},
        "webdriver": {}
      },
      "close": function () {},
      "closed": {},
      "confirm": function () {},
      "crypto": {
        "getRandomValues": function () {},
        "subtle": {
          "decrypt": function () {},
          "deriveBits": function () {},
          "deriveKey": function () {},
          "digest": function () {},
          "encrypt": function () {},
          "exportKey": function () {},
          "generateKey": function () {},
          "importKey": function () {},
          "sign": function () {},
          "unwrapKey": function () {},
          "verify": function () {},
          "wrapKey": function () {}
        }
      },
      "customElements": {
        "define": function () {},
        "get": function () {},
        "upgrade": function () {},
        "whenDefined": function () {}
      },
      "defaultStatus": {},
      "defaultstatus": {},
      "devicePixelRatio": {},
      "dispatchEvent": function () {},
      "document": {},
      "event": {},
      "fetch": function () {},
      "find": function () {},
      "focus": function () {},
      "frameElement": {},
      "frames": {},
      "getComputedStyle": function () {},
      "getMatchedCSSRules": function () {},
      "getSelection": function () {},
      "history": {
        "back": function () {},
        "forward": function () {},
        "go": function () {},
        "length": {},
        "pushState": function () {},
        "replaceState": function () {},
        "scrollRestoration": {},
        "state": {}
      },
      "indexedDB": {
        "cmp": function () {},
        "databases": function () {},
        "deleteDatabase": function () {},
        "open": function () {}
      },
      "innerHeight": {},
      "innerWidth": {},
      "isSecureContext": {},
      "length": {},
      "localStorage": {
        "clear": function () {},
        "getItem": function () {},
        "key": function () {},
        "length": {},
        "removeItem": function () {},
        "setItem": function () {}
      },
      "location": {
        "ancestorOrigins": {
          "0": {},
          "contains": function () {},
          "item": function () {},
          "length": {}
        },
        "assign": function () {},
        "hash": {},
        "host": {},
        "hostname": {},
        "href": {},
        "origin": {},
        "pathname": {},
        "port": {},
        "protocol": {},
        "reload": function () {},
        "replace": function () {},
        "search": {},
        "toString": function () {}
      },
      "locationbar": {
        "visible": {}
      },
      "matchMedia": function () {},
      "menubar": {
        "visible": {}
      },
      "moveBy": function () {},
      "moveTo": function () {},
      "name": {},
      "navigator": {
        "appCodeName": {},
        "appName": {},
        "appVersion": {},
        "cookieEnabled": {},
        "geolocation": {
          "clearWatch": function () {},
          "getCurrentPosition": function () {},
          "watchPosition": function () {}
        },
        "getGamepads": function () {},
        "getStorageUpdates": function () {},
        "javaEnabled": function () {},
        "language": {},
        "languages": {},
        "maxTouchPoints": {},
        "mediaCapabilities": {
          "decodingInfo": function () {}
        },
        "mimeTypes": {
          "0": {
            "description": {},
            "enabledPlugin": {
              "0": {},
              "1": {
                "description": {},
                "enabledPlugin": {},
                "suffixes": {},
                "type": {}
              },
              "2": {
                "description": {},
                "enabledPlugin": {},
                "suffixes": {},
                "type": {}
              },
              "description": {},
              "filename": {},
              "item": function () {},
              "length": {},
              "name": {},
              "namedItem": function () {}
            },
            "suffixes": {},
            "type": {}
          },
          "1": {
            "description": {},
            "enabledPlugin": {
              "0": {
                "description": {},
                "enabledPlugin": {},
                "suffixes": {},
                "type": {}
              },
              "1": {},
              "2": {
                "description": {},
                "enabledPlugin": {},
                "suffixes": {},
                "type": {}
              },
              "description": {},
              "filename": {},
              "item": function () {},
              "length": {},
              "name": {},
              "namedItem": function () {}
            },
            "suffixes": {},
            "type": {}
          },
          "2": {
            "description": {},
            "enabledPlugin": {
              "0": {
                "description": {},
                "enabledPlugin": {},
                "suffixes": {},
                "type": {}
              },
              "1": {
                "description": {},
                "enabledPlugin": {},
                "suffixes": {},
                "type": {}
              },
              "2": {},
              "description": {},
              "filename": {},
              "item": function () {},
              "length": {},
              "name": {},
              "namedItem": function () {}
            },
            "suffixes": {},
            "type": {}
          },
          "item": function () {},
          "length": {},
          "namedItem": function () {}
        },
        "onLine": {},
        "platform": {},
        "plugins": {
          "0": {
            "0": {
              "description": {},
              "enabledPlugin": {},
              "suffixes": {},
              "type": {}
            },
            "1": {
              "description": {},
              "enabledPlugin": {},
              "suffixes": {},
              "type": {}
            },
            "2": {
              "description": {},
              "enabledPlugin": {},
              "suffixes": {},
              "type": {}
            },
            "description": {},
            "filename": {},
            "item": function () {},
            "length": {},
            "name": {},
            "namedItem": function () {}
          },
          "item": function () {},
          "length": {},
          "namedItem": function () {},
          "refresh": function () {}
        },
        "product": {},
        "productSub": {},
        "requestMediaKeySystemAccess": function () {},
        "sendBeacon": function () {},
        "userAgent": {},
        "vendor": {},
        "vendorSub": {},
        "webdriver": {}
      },
      "offscreenBuffering": {},
      "onabort": {},
      "onafterprint": {},
      "onanimationcancel": {},
      "onanimationend": {},
      "onanimationiteration": {},
      "onanimationstart": {},
      "onbeforeprint": {},
      "onbeforeunload": {},
      "onblur": {},
      "oncanplay": {},
      "oncanplaythrough": {},
      "onchange": {},
      "onclick": {},
      "oncontextmenu": {},
      "oncuechange": {},
      "ondblclick": {},
      "ondrag": {},
      "ondragend": {},
      "ondragenter": {},
      "ondragleave": {},
      "ondragover": {},
      "ondragstart": {},
      "ondrop": {},
      "ondurationchange": {},
      "onemptied": {},
      "onended": {},
      "onerror": {},
      "onfocus": {},
      "ongotpointercapture": {},
      "onhashchange": {},
      "oninput": {},
      "oninvalid": {},
      "onkeydown": {},
      "onkeypress": {},
      "onkeyup": {},
      "onlanguagechange": {},
      "onload": {},
      "onloadeddata": {},
      "onloadedmetadata": {},
      "onloadstart": {},
      "onlostpointercapture": {},
      "onmessage": {},
      "onmousedown": {},
      "onmouseenter": {},
      "onmouseleave": {},
      "onmousemove": {},
      "onmouseout": {},
      "onmouseover": {},
      "onmouseup": {},
      "onmousewheel": {},
      "onoffline": {},
      "ononline": {},
      "onpagehide": {},
      "onpageshow": {},
      "onpause": {},
      "onplay": {},
      "onplaying": {},
      "onpointercancel": {},
      "onpointerdown": {},
      "onpointerenter": {},
      "onpointerleave": {},
      "onpointermove": {},
      "onpointerout": {},
      "onpointerover": {},
      "onpointerup": {},
      "onpopstate": {},
      "onprogress": {},
      "onratechange": {},
      "onrejectionhandled": {},
      "onreset": {},
      "onresize": {},
      "onscroll": {},
      "onseeked": {},
      "onseeking": {},
      "onselect": {},
      "onstalled": {},
      "onstorage": {},
      "onsubmit": {},
      "onsuspend": {},
      "ontimeupdate": {},
      "ontoggle": {},
      "ontransitioncancel": {},
      "ontransitionend": {},
      "ontransitionrun": {},
      "ontransitionstart": {},
      "onunhandledrejection": {},
      "onunload": {},
      "onvolumechange": {},
      "onwaiting": {},
      "open": function () {},
      "opener": {},
      "origin": {},
      "outerHeight": {},
      "outerWidth": {},
      "pageXOffset": {},
      "pageYOffset": {},
      "parent": {
        "0": {},
        "React": {
          "Children": {
            "count": function () {},
            "forEach": function () {},
            "map": function () {},
            "only": function () {},
            "toArray": function () {}
          },
          "Component": function () {},
          "DOM": {
            "a": {
              "type": {}
            },
            "abbr": {
              "type": {}
            },
            "address": {
              "type": {}
            },
            "area": {
              "type": {}
            },
            "article": {
              "type": {}
            },
            "aside": {
              "type": {}
            },
            "audio": {
              "type": {}
            },
            "b": {
              "type": {}
            },
            "base": {
              "type": {}
            },
            "bdi": {
              "type": {}
            },
            "bdo": {
              "type": {}
            },
            "big": {
              "type": {}
            },
            "blockquote": {
              "type": {}
            },
            "body": {
              "type": {}
            },
            "br": {
              "type": {}
            },
            "button": {
              "type": {}
            },
            "canvas": {
              "type": {}
            },
            "caption": {
              "type": {}
            },
            "circle": {
              "type": {}
            },
            "cite": {
              "type": {}
            },
            "clipPath": {
              "type": {}
            },
            "code": {
              "type": {}
            },
            "col": {
              "type": {}
            },
            "colgroup": {
              "type": {}
            },
            "data": {
              "type": {}
            },
            "datalist": {
              "type": {}
            },
            "dd": {
              "type": {}
            },
            "defs": {
              "type": {}
            },
            "del": {
              "type": {}
            },
            "details": {
              "type": {}
            },
            "dfn": {
              "type": {}
            },
            "dialog": {
              "type": {}
            },
            "div": {
              "type": {}
            },
            "dl": {
              "type": {}
            },
            "dt": {
              "type": {}
            },
            "ellipse": {
              "type": {}
            },
            "em": {
              "type": {}
            },
            "embed": {
              "type": {}
            },
            "fieldset": {
              "type": {}
            },
            "figcaption": {
              "type": {}
            },
            "figure": {
              "type": {}
            },
            "footer": {
              "type": {}
            },
            "form": {
              "type": {}
            },
            "g": {
              "type": {}
            },
            "h1": {
              "type": {}
            },
            "h2": {
              "type": {}
            },
            "h3": {
              "type": {}
            },
            "h4": {
              "type": {}
            },
            "h5": {
              "type": {}
            },
            "h6": {
              "type": {}
            },
            "head": {
              "type": {}
            },
            "header": {
              "type": {}
            },
            "hgroup": {
              "type": {}
            },
            "hr": {
              "type": {}
            },
            "html": {
              "type": {}
            },
            "i": {
              "type": {}
            },
            "iframe": {
              "type": {}
            },
            "image": {
              "type": {}
            },
            "img": {
              "type": {}
            },
            "input": {
              "type": {}
            },
            "ins": {
              "type": {}
            },
            "kbd": {
              "type": {}
            },
            "keygen": {
              "type": {}
            },
            "label": {
              "type": {}
            },
            "legend": {
              "type": {}
            },
            "li": {
              "type": {}
            },
            "line": {
              "type": {}
            },
            "linearGradient": {
              "type": {}
            },
            "link": {
              "type": {}
            },
            "main": {
              "type": {}
            },
            "map": {
              "type": {}
            },
            "mark": {
              "type": {}
            },
            "mask": {
              "type": {}
            },
            "menu": {
              "type": {}
            },
            "menuitem": {
              "type": {}
            },
            "meta": {
              "type": {}
            },
            "meter": {
              "type": {}
            },
            "nav": {
              "type": {}
            },
            "noscript": {
              "type": {}
            },
            "object": {
              "type": {}
            },
            "ol": {
              "type": {}
            },
            "optgroup": {
              "type": {}
            },
            "option": {
              "type": {}
            },
            "output": {
              "type": {}
            },
            "p": {
              "type": {}
            },
            "param": {
              "type": {}
            },
            "path": {
              "type": {}
            },
            "pattern": {
              "type": {}
            },
            "picture": {
              "type": {}
            },
            "polygon": {
              "type": {}
            },
            "polyline": {
              "type": {}
            },
            "pre": {
              "type": {}
            },
            "progress": {
              "type": {}
            },
            "q": {
              "type": {}
            },
            "radialGradient": {
              "type": {}
            },
            "rect": {
              "type": {}
            },
            "rp": {
              "type": {}
            },
            "rt": {
              "type": {}
            },
            "ruby": {
              "type": {}
            },
            "s": {
              "type": {}
            },
            "samp": {
              "type": {}
            },
            "script": {
              "type": {}
            },
            "section": {
              "type": {}
            },
            "select": {
              "type": {}
            },
            "small": {
              "type": {}
            },
            "source": {
              "type": {}
            },
            "span": {
              "type": {}
            },
            "stop": {
              "type": {}
            },
            "strong": {
              "type": {}
            },
            "style": {
              "type": {}
            },
            "sub": {
              "type": {}
            },
            "summary": {
              "type": {}
            },
            "sup": {
              "type": {}
            },
            "svg": {
              "type": {}
            },
            "table": {
              "type": {}
            },
            "tbody": {
              "type": {}
            },
            "td": {
              "type": {}
            },
            "text": {
              "type": {}
            },
            "textarea": {
              "type": {}
            },
            "tfoot": {
              "type": {}
            },
            "th": {
              "type": {}
            },
            "thead": {
              "type": {}
            },
            "time": {
              "type": {}
            },
            "title": {
              "type": {}
            },
            "tr": {
              "type": {}
            },
            "track": {
              "type": {}
            },
            "tspan": {
              "type": {}
            },
            "u": {
              "type": {}
            },
            "ul": {
              "type": {}
            },
            "var": {
              "type": {}
            },
            "video": {
              "type": {}
            },
            "wbr": {
              "type": {}
            }
          },
          "PropTypes": {
            "PropTypes": {},
            "any": {
              "isRequired": function () {}
            },
            "array": {
              "isRequired": function () {}
            },
            "arrayOf": function () {},
            "bool": {
              "isRequired": function () {}
            },
            "checkPropTypes": function () {},
            "element": {
              "isRequired": function () {}
            },
            "func": {
              "isRequired": function () {}
            },
            "instanceOf": function () {},
            "node": {
              "isRequired": function () {}
            },
            "number": {
              "isRequired": function () {}
            },
            "object": {
              "isRequired": function () {}
            },
            "objectOf": function () {},
            "oneOf": function () {},
            "oneOfType": function () {},
            "shape": function () {},
            "string": {
              "isRequired": function () {}
            },
            "symbol": {
              "isRequired": function () {}
            }
          },
          "PureComponent": function () {},
          "__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED": {
            "ReactCurrentOwner": {
              "current": {}
            }
          },
          "__spread": function () {},
          "cloneElement": function () {},
          "createClass": function () {},
          "createElement": function () {},
          "createFactory": function () {},
          "createMixin": function () {},
          "isValidElement": function () {},
          "version": {}
        },
        "ReactDOM": {
          "findDOMNode": function () {},
          "render": function () {},
          "unmountComponentAtNode": function () {},
          "unstable_batchedUpdates": function () {},
          "unstable_renderSubtreeIntoContainer": function () {},
          "version": {}
        },
        "addEventListener": function () {},
        "alert": function () {},
        "applicationCache": {
          "CHECKING": {},
          "DOWNLOADING": {},
          "IDLE": {},
          "OBSOLETE": {},
          "UNCACHED": {},
          "UPDATEREADY": {},
          "abort": function () {},
          "addEventListener": function () {},
          "dispatchEvent": function () {},
          "oncached": {},
          "onchecking": {},
          "ondownloading": {},
          "onerror": {},
          "onnoupdate": {},
          "onobsolete": {},
          "onprogress": {},
          "onupdateready": {},
          "removeEventListener": function () {},
          "status": {},
          "swapCache": function () {},
          "update": function () {}
        },
        "atob": function () {},
        "blur": function () {},
        "btoa": function () {},
        "cancelAnimationFrame": function () {},
        "captureEvents": function () {},
        "clearInterval": function () {},
        "clearTimeout": function () {},
        "clientInformation": {
          "appCodeName": {},
          "appName": {},
          "appVersion": {},
          "cookieEnabled": {},
          "geolocation": {
            "clearWatch": function () {},
            "getCurrentPosition": function () {},
            "watchPosition": function () {}
          },
          "getGamepads": function () {},
          "getStorageUpdates": function () {},
          "javaEnabled": function () {},
          "language": {},
          "languages": {},
          "maxTouchPoints": {},
          "mediaCapabilities": {
            "decodingInfo": function () {}
          },
          "mimeTypes": {
            "0": {
              "description": {},
              "enabledPlugin": {
                "0": {},
                "1": {
                  "description": {},
                  "enabledPlugin": {},
                  "suffixes": {},
                  "type": {}
                },
                "2": {
                  "description": {},
                  "enabledPlugin": {},
                  "suffixes": {},
                  "type": {}
                },
                "description": {},
                "filename": {},
                "item": function () {},
                "length": {},
                "name": {},
                "namedItem": function () {}
              },
              "suffixes": {},
              "type": {}
            },
            "1": {
              "description": {},
              "enabledPlugin": {
                "0": {
                  "description": {},
                  "enabledPlugin": {},
                  "suffixes": {},
                  "type": {}
                },
                "1": {},
                "2": {
                  "description": {},
                  "enabledPlugin": {},
                  "suffixes": {},
                  "type": {}
                },
                "description": {},
                "filename": {},
                "item": function () {},
                "length": {},
                "name": {},
                "namedItem": function () {}
              },
              "suffixes": {},
              "type": {}
            },
            "2": {
              "description": {},
              "enabledPlugin": {
                "0": {
                  "description": {},
                  "enabledPlugin": {},
                  "suffixes": {},
                  "type": {}
                },
                "1": {
                  "description": {},
                  "enabledPlugin": {},
                  "suffixes": {},
                  "type": {}
                },
                "2": {},
                "description": {},
                "filename": {},
                "item": function () {},
                "length": {},
                "name": {},
                "namedItem": function () {}
              },
              "suffixes": {},
              "type": {}
            },
            "item": function () {},
            "length": {},
            "namedItem": function () {}
          },
          "onLine": {},
          "platform": {},
          "plugins": {
            "0": {
              "0": {
                "description": {},
                "enabledPlugin": {},
                "suffixes": {},
                "type": {}
              },
              "1": {
                "description": {},
                "enabledPlugin": {},
                "suffixes": {},
                "type": {}
              },
              "2": {
                "description": {},
                "enabledPlugin": {},
                "suffixes": {},
                "type": {}
              },
              "description": {},
              "filename": {},
              "item": function () {},
              "length": {},
              "name": {},
              "namedItem": function () {}
            },
            "item": function () {},
            "length": {},
            "namedItem": function () {},
            "refresh": function () {}
          },
          "product": {},
          "productSub": {},
          "requestMediaKeySystemAccess": function () {},
          "sendBeacon": function () {},
          "userAgent": {},
          "vendor": {},
          "vendorSub": {},
          "webdriver": {}
        },
        "close": function () {},
        "closed": {},
        "confirm": function () {},
        "createReactClass": function () {},
        "crypto": {
          "getRandomValues": function () {},
          "subtle": {
            "decrypt": function () {},
            "deriveBits": function () {},
            "deriveKey": function () {},
            "digest": function () {},
            "encrypt": function () {},
            "exportKey": function () {},
            "generateKey": function () {},
            "importKey": function () {},
            "sign": function () {},
            "unwrapKey": function () {},
            "verify": function () {},
            "wrapKey": function () {}
          }
        },
        "customElements": {
          "define": function () {},
          "get": function () {},
          "upgrade": function () {},
          "whenDefined": function () {}
        },
        "defaultStatus": {},
        "defaultstatus": {},
        "devicePixelRatio": {},
        "dispatchEvent": function () {},
        "document": {},
        "event": {
          "AT_TARGET": {},
          "BUBBLING_PHASE": {},
          "CAPTURING_PHASE": {},
          "NONE": {},
          "bubbles": {},
          "cancelBubble": {},
          "cancelable": {},
          "composed": {},
          "composedPath": function () {},
          "currentTarget": {
            "addEventListener": function () {},
            "close": function () {},
            "dispatchEvent": function () {},
            "onmessage": function () {},
            "postMessage": function () {},
            "removeEventListener": function () {},
            "start": function () {}
          },
          "data": {},
          "defaultPrevented": {},
          "eventPhase": {},
          "initEvent": function () {},
          "initMessageEvent": function () {},
          "isTrusted": {},
          "lastEventId": {},
          "origin": {},
          "ports": {},
          "preventDefault": function () {},
          "returnValue": {},
          "source": {},
          "srcElement": {
            "addEventListener": function () {},
            "close": function () {},
            "dispatchEvent": function () {},
            "onmessage": function () {},
            "postMessage": function () {},
            "removeEventListener": function () {},
            "start": function () {}
          },
          "stopImmediatePropagation": function () {},
          "stopPropagation": function () {},
          "target": {
            "addEventListener": function () {},
            "close": function () {},
            "dispatchEvent": function () {},
            "onmessage": function () {},
            "postMessage": function () {},
            "removeEventListener": function () {},
            "start": function () {}
          },
          "timeStamp": {},
          "type": {}
        },
        "fetch": function () {},
        "find": function () {},
        "focus": function () {},
        "frameElement": {},
        "frames": {},
        "getComputedStyle": function () {},
        "getMatchedCSSRules": function () {},
        "getSelection": function () {},
        "history": {
          "back": function () {},
          "forward": function () {},
          "go": function () {},
          "length": {},
          "pushState": function () {},
          "replaceState": function () {},
          "scrollRestoration": {},
          "state": {}
        },
        "indexedDB": {
          "cmp": function () {},
          "databases": function () {},
          "deleteDatabase": function () {},
          "open": function () {}
        },
        "innerHeight": {},
        "innerWidth": {},
        "isSecureContext": {},
        "javascript_externs_generator": {
          "ui": {
            "core": {
              "init": function () {},
              "re_render": function () {}
            }
          }
        },
        "js_beautify": function () {},
        "length": {},
        "localStorage": {
          "clear": function () {},
          "getItem": function () {},
          "key": function () {},
          "length": {},
          "removeItem": function () {},
          "setItem": function () {}
        },
        "location": {
          "ancestorOrigins": {
            "contains": function () {},
            "item": function () {},
            "length": {}
          },
          "assign": function () {},
          "hash": {},
          "host": {},
          "hostname": {},
          "href": {},
          "origin": {},
          "pathname": {},
          "port": {},
          "protocol": {},
          "reload": function () {},
          "replace": function () {},
          "search": {},
          "toString": function () {}
        },
        "locationbar": {
          "visible": {}
        },
        "matchMedia": function () {},
        "menubar": {
          "visible": {}
        },
        "moveBy": function () {},
        "moveTo": function () {},
        "name": {},
        "navigator": {
          "appCodeName": {},
          "appName": {},
          "appVersion": {},
          "cookieEnabled": {},
          "geolocation": {
            "clearWatch": function () {},
            "getCurrentPosition": function () {},
            "watchPosition": function () {}
          },
          "getGamepads": function () {},
          "getStorageUpdates": function () {},
          "javaEnabled": function () {},
          "language": {},
          "languages": {},
          "maxTouchPoints": {},
          "mediaCapabilities": {
            "decodingInfo": function () {}
          },
          "mimeTypes": {
            "0": {
              "description": {},
              "enabledPlugin": {
                "0": {},
                "1": {
                  "description": {},
                  "enabledPlugin": {},
                  "suffixes": {},
                  "type": {}
                },
                "2": {
                  "description": {},
                  "enabledPlugin": {},
                  "suffixes": {},
                  "type": {}
                },
                "description": {},
                "filename": {},
                "item": function () {},
                "length": {},
                "name": {},
                "namedItem": function () {}
              },
              "suffixes": {},
              "type": {}
            },
            "1": {
              "description": {},
              "enabledPlugin": {
                "0": {
                  "description": {},
                  "enabledPlugin": {},
                  "suffixes": {},
                  "type": {}
                },
                "1": {},
                "2": {
                  "description": {},
                  "enabledPlugin": {},
                  "suffixes": {},
                  "type": {}
                },
                "description": {},
                "filename": {},
                "item": function () {},
                "length": {},
                "name": {},
                "namedItem": function () {}
              },
              "suffixes": {},
              "type": {}
            },
            "2": {
              "description": {},
              "enabledPlugin": {
                "0": {
                  "description": {},
                  "enabledPlugin": {},
                  "suffixes": {},
                  "type": {}
                },
                "1": {
                  "description": {},
                  "enabledPlugin": {},
                  "suffixes": {},
                  "type": {}
                },
                "2": {},
                "description": {},
                "filename": {},
                "item": function () {},
                "length": {},
                "name": {},
                "namedItem": function () {}
              },
              "suffixes": {},
              "type": {}
            },
            "item": function () {},
            "length": {},
            "namedItem": function () {}
          },
          "onLine": {},
          "platform": {},
          "plugins": {
            "0": {
              "0": {
                "description": {},
                "enabledPlugin": {},
                "suffixes": {},
                "type": {}
              },
              "1": {
                "description": {},
                "enabledPlugin": {},
                "suffixes": {},
                "type": {}
              },
              "2": {
                "description": {},
                "enabledPlugin": {},
                "suffixes": {},
                "type": {}
              },
              "description": {},
              "filename": {},
              "item": function () {},
              "length": {},
              "name": {},
              "namedItem": function () {}
            },
            "item": function () {},
            "length": {},
            "namedItem": function () {},
            "refresh": function () {}
          },
          "product": {},
          "productSub": {},
          "requestMediaKeySystemAccess": function () {},
          "sendBeacon": function () {},
          "userAgent": {},
          "vendor": {},
          "vendorSub": {},
          "webdriver": {}
        },
        "offscreenBuffering": {},
        "onabort": {},
        "onafterprint": {},
        "onanimationcancel": {},
        "onanimationend": {},
        "onanimationiteration": {},
        "onanimationstart": {},
        "onbeforeprint": {},
        "onbeforeunload": {},
        "onblur": {},
        "oncanplay": {},
        "oncanplaythrough": {},
        "onchange": {},
        "onclick": {},
        "oncontextmenu": {},
        "oncuechange": {},
        "ondblclick": {},
        "ondrag": {},
        "ondragend": {},
        "ondragenter": {},
        "ondragleave": {},
        "ondragover": {},
        "ondragstart": {},
        "ondrop": {},
        "ondurationchange": {},
        "onemptied": {},
        "onended": {},
        "onerror": {},
        "onfocus": {},
        "ongotpointercapture": {},
        "onhashchange": {},
        "oninput": {},
        "oninvalid": {},
        "onkeydown": {},
        "onkeypress": {},
        "onkeyup": {},
        "onlanguagechange": {},
        "onload": {},
        "onloadeddata": {},
        "onloadedmetadata": {},
        "onloadstart": {},
        "onlostpointercapture": {},
        "onmessage": {},
        "onmousedown": {},
        "onmouseenter": {},
        "onmouseleave": {},
        "onmousemove": {},
        "onmouseout": {},
        "onmouseover": {},
        "onmouseup": {},
        "onmousewheel": {},
        "onoffline": {},
        "ononline": {},
        "onpagehide": {},
        "onpageshow": {},
        "onpause": {},
        "onplay": {},
        "onplaying": {},
        "onpointercancel": {},
        "onpointerdown": {},
        "onpointerenter": {},
        "onpointerleave": {},
        "onpointermove": {},
        "onpointerout": {},
        "onpointerover": {},
        "onpointerup": {},
        "onpopstate": {},
        "onprogress": {},
        "onratechange": {},
        "onrejectionhandled": {},
        "onreset": {},
        "onresize": {},
        "onscroll": {},
        "onseeked": {},
        "onseeking": {},
        "onselect": {},
        "onstalled": {},
        "onstorage": {},
        "onsubmit": {},
        "onsuspend": {},
        "ontimeupdate": {},
        "ontoggle": {},
        "ontransitioncancel": {},
        "ontransitionend": {},
        "ontransitionrun": {},
        "ontransitionstart": {},
        "onunhandledrejection": {},
        "onunload": {},
        "onvolumechange": {},
        "onwaiting": {},
        "open": function () {},
        "opener": {},
        "origin": {},
        "outerHeight": {},
        "outerWidth": {},
        "pageXOffset": {},
        "pageYOffset": {},
        "parent": {},
        "performance": {
          "addEventListener": function () {},
          "clearMarks": function () {},
          "clearMeasures": function () {},
          "clearResourceTimings": function () {},
          "dispatchEvent": function () {},
          "getEntries": function () {},
          "getEntriesByName": function () {},
          "getEntriesByType": function () {},
          "mark": function () {},
          "measure": function () {},
          "navigation": {
            "TYPE_BACK_FORWARD": {},
            "TYPE_NAVIGATE": {},
            "TYPE_RELOAD": {},
            "TYPE_RESERVED": {},
            "redirectCount": {},
            "type": {}
          },
          "now": function () {},
          "onresourcetimingbufferfull": {},
          "removeEventListener": function () {},
          "setResourceTimingBufferSize": function () {},
          "timing": {
            "connectEnd": {},
            "connectStart": {},
            "domComplete": {},
            "domContentLoadedEventEnd": {},
            "domContentLoadedEventStart": {},
            "domInteractive": {},
            "domLoading": {},
            "domainLookupEnd": {},
            "domainLookupStart": {},
            "fetchStart": {},
            "loadEventEnd": {},
            "loadEventStart": {},
            "navigationStart": {},
            "redirectEnd": {},
            "redirectStart": {},
            "requestStart": {},
            "responseEnd": {},
            "responseStart": {},
            "secureConnectionStart": {},
            "toJSON": function () {},
            "unloadEventEnd": {},
            "unloadEventStart": {}
          }
        },
        "personalbar": {
          "visible": {}
        },
        "postMessage": function () {},
        "print": function () {},
        "prompt": function () {},
        "queueMicrotask": function () {},
        "reagent": {
          "core": {
            "force_update_all": function () {}
          }
        },
        "releaseEvents": function () {},
        "removeEventListener": function () {},
        "requestAnimationFrame": function () {},
        "resizeBy": function () {},
        "resizeTo": function () {},
        "safari": {
          "pushNotification": {
            "permission": function () {},
            "requestPermission": function () {}
          }
        },
        "screen": {
          "availHeight": {},
          "availLeft": {},
          "availTop": {},
          "availWidth": {},
          "colorDepth": {},
          "height": {},
          "pixelDepth": {},
          "width": {}
        },
        "screenLeft": {},
        "screenTop": {},
        "screenX": {},
        "screenY": {},
        "scroll": function () {},
        "scrollBy": function () {},
        "scrollTo": function () {},
        "scrollX": {},
        "scrollY": {},
        "scrollbars": {
          "visible": {}
        },
        "self": {},
        "sessionStorage": {
          "clear": function () {},
          "getItem": function () {},
          "key": function () {},
          "length": {},
          "removeItem": function () {},
          "setItem": function () {}
        },
        "setInterval": function () {},
        "setTimeout": function () {},
        "showModalDialog": function () {},
        "speechSynthesis": {
          "cancel": function () {},
          "getVoices": function () {},
          "pause": function () {},
          "paused": {},
          "pending": {},
          "resume": function () {},
          "speak": function () {},
          "speaking": {}
        },
        "status": {},
        "statusbar": {
          "visible": {}
        },
        "stop": function () {},
        "styleMedia": {
          "matchMedium": function () {},
          "type": {}
        },
        "toolbar": {
          "visible": {}
        },
        "top": {},
        "visualViewport": {
          "addEventListener": function () {},
          "dispatchEvent": function () {},
          "height": {},
          "offsetLeft": {},
          "offsetTop": {},
          "onresize": {},
          "onscroll": {},
          "pageLeft": {},
          "pageTop": {},
          "removeEventListener": function () {},
          "scale": {},
          "width": {}
        },
        "webkitCancelAnimationFrame": function () {},
        "webkitCancelRequestAnimationFrame": function () {},
        "webkitConvertPointFromNodeToPage": function () {},
        "webkitConvertPointFromPageToNode": function () {},
        "webkitIndexedDB": {
          "cmp": function () {},
          "databases": function () {},
          "deleteDatabase": function () {},
          "open": function () {}
        },
        "webkitRequestAnimationFrame": function () {},
        "window": {}
      },
      "performance": {
        "addEventListener": function () {},
        "clearMarks": function () {},
        "clearMeasures": function () {},
        "clearResourceTimings": function () {},
        "dispatchEvent": function () {},
        "getEntries": function () {},
        "getEntriesByName": function () {},
        "getEntriesByType": function () {},
        "mark": function () {},
        "measure": function () {},
        "navigation": {
          "TYPE_BACK_FORWARD": {},
          "TYPE_NAVIGATE": {},
          "TYPE_RELOAD": {},
          "TYPE_RESERVED": {},
          "redirectCount": {},
          "type": {}
        },
        "now": function () {},
        "onresourcetimingbufferfull": {},
        "removeEventListener": function () {},
        "setResourceTimingBufferSize": function () {},
        "timing": {
          "connectEnd": {},
          "connectStart": {},
          "domComplete": {},
          "domContentLoadedEventEnd": {},
          "domContentLoadedEventStart": {},
          "domInteractive": {},
          "domLoading": {},
          "domainLookupEnd": {},
          "domainLookupStart": {},
          "fetchStart": {},
          "loadEventEnd": {},
          "loadEventStart": {},
          "navigationStart": {},
          "redirectEnd": {},
          "redirectStart": {},
          "requestStart": {},
          "responseEnd": {},
          "responseStart": {},
          "secureConnectionStart": {},
          "toJSON": function () {},
          "unloadEventEnd": {},
          "unloadEventStart": {}
        }
      },
      "personalbar": {
        "visible": {}
      },
      "postMessage": function () {},
      "print": function () {},
      "prompt": function () {},
      "queueMicrotask": function () {},
      "releaseEvents": function () {},
      "removeEventListener": function () {},
      "requestAnimationFrame": function () {},
      "resizeBy": function () {},
      "resizeTo": function () {},
      "screen": {
        "availHeight": {},
        "availLeft": {},
        "availTop": {},
        "availWidth": {},
        "colorDepth": {},
        "height": {},
        "pixelDepth": {},
        "width": {}
      },
      "screenLeft": {},
      "screenTop": {},
      "screenX": {},
      "screenY": {},
      "scroll": function () {},
      "scrollBy": function () {},
      "scrollTo": function () {},
      "scrollX": {},
      "scrollY": {},
      "scrollbars": {
        "visible": {}
      },
      "self": {},
      "sessionStorage": {
        "clear": function () {},
        "getItem": function () {},
        "key": function () {},
        "length": {},
        "removeItem": function () {},
        "setItem": function () {}
      },
      "setInterval": function () {},
      "setTimeout": function () {},
      "showModalDialog": function () {},
      "speechSynthesis": {
        "cancel": function () {},
        "getVoices": function () {},
        "pause": function () {},
        "paused": {},
        "pending": {},
        "resume": function () {},
        "speak": function () {},
        "speaking": {}
      },
      "status": {},
      "statusbar": {
        "visible": {}
      },
      "stop": function () {},
      "styleMedia": {
        "matchMedium": function () {},
        "type": {}
      },
      "toolbar": {
        "visible": {}
      },
      "top": {
        "0": {},
        "React": {
          "Children": {
            "count": function () {},
            "forEach": function () {},
            "map": function () {},
            "only": function () {},
            "toArray": function () {}
          },
          "Component": function () {},
          "DOM": {
            "a": {
              "type": {}
            },
            "abbr": {
              "type": {}
            },
            "address": {
              "type": {}
            },
            "area": {
              "type": {}
            },
            "article": {
              "type": {}
            },
            "aside": {
              "type": {}
            },
            "audio": {
              "type": {}
            },
            "b": {
              "type": {}
            },
            "base": {
              "type": {}
            },
            "bdi": {
              "type": {}
            },
            "bdo": {
              "type": {}
            },
            "big": {
              "type": {}
            },
            "blockquote": {
              "type": {}
            },
            "body": {
              "type": {}
            },
            "br": {
              "type": {}
            },
            "button": {
              "type": {}
            },
            "canvas": {
              "type": {}
            },
            "caption": {
              "type": {}
            },
            "circle": {
              "type": {}
            },
            "cite": {
              "type": {}
            },
            "clipPath": {
              "type": {}
            },
            "code": {
              "type": {}
            },
            "col": {
              "type": {}
            },
            "colgroup": {
              "type": {}
            },
            "data": {
              "type": {}
            },
            "datalist": {
              "type": {}
            },
            "dd": {
              "type": {}
            },
            "defs": {
              "type": {}
            },
            "del": {
              "type": {}
            },
            "details": {
              "type": {}
            },
            "dfn": {
              "type": {}
            },
            "dialog": {
              "type": {}
            },
            "div": {
              "type": {}
            },
            "dl": {
              "type": {}
            },
            "dt": {
              "type": {}
            },
            "ellipse": {
              "type": {}
            },
            "em": {
              "type": {}
            },
            "embed": {
              "type": {}
            },
            "fieldset": {
              "type": {}
            },
            "figcaption": {
              "type": {}
            },
            "figure": {
              "type": {}
            },
            "footer": {
              "type": {}
            },
            "form": {
              "type": {}
            },
            "g": {
              "type": {}
            },
            "h1": {
              "type": {}
            },
            "h2": {
              "type": {}
            },
            "h3": {
              "type": {}
            },
            "h4": {
              "type": {}
            },
            "h5": {
              "type": {}
            },
            "h6": {
              "type": {}
            },
            "head": {
              "type": {}
            },
            "header": {
              "type": {}
            },
            "hgroup": {
              "type": {}
            },
            "hr": {
              "type": {}
            },
            "html": {
              "type": {}
            },
            "i": {
              "type": {}
            },
            "iframe": {
              "type": {}
            },
            "image": {
              "type": {}
            },
            "img": {
              "type": {}
            },
            "input": {
              "type": {}
            },
            "ins": {
              "type": {}
            },
            "kbd": {
              "type": {}
            },
            "keygen": {
              "type": {}
            },
            "label": {
              "type": {}
            },
            "legend": {
              "type": {}
            },
            "li": {
              "type": {}
            },
            "line": {
              "type": {}
            },
            "linearGradient": {
              "type": {}
            },
            "link": {
              "type": {}
            },
            "main": {
              "type": {}
            },
            "map": {
              "type": {}
            },
            "mark": {
              "type": {}
            },
            "mask": {
              "type": {}
            },
            "menu": {
              "type": {}
            },
            "menuitem": {
              "type": {}
            },
            "meta": {
              "type": {}
            },
            "meter": {
              "type": {}
            },
            "nav": {
              "type": {}
            },
            "noscript": {
              "type": {}
            },
            "object": {
              "type": {}
            },
            "ol": {
              "type": {}
            },
            "optgroup": {
              "type": {}
            },
            "option": {
              "type": {}
            },
            "output": {
              "type": {}
            },
            "p": {
              "type": {}
            },
            "param": {
              "type": {}
            },
            "path": {
              "type": {}
            },
            "pattern": {
              "type": {}
            },
            "picture": {
              "type": {}
            },
            "polygon": {
              "type": {}
            },
            "polyline": {
              "type": {}
            },
            "pre": {
              "type": {}
            },
            "progress": {
              "type": {}
            },
            "q": {
              "type": {}
            },
            "radialGradient": {
              "type": {}
            },
            "rect": {
              "type": {}
            },
            "rp": {
              "type": {}
            },
            "rt": {
              "type": {}
            },
            "ruby": {
              "type": {}
            },
            "s": {
              "type": {}
            },
            "samp": {
              "type": {}
            },
            "script": {
              "type": {}
            },
            "section": {
              "type": {}
            },
            "select": {
              "type": {}
            },
            "small": {
              "type": {}
            },
            "source": {
              "type": {}
            },
            "span": {
              "type": {}
            },
            "stop": {
              "type": {}
            },
            "strong": {
              "type": {}
            },
            "style": {
              "type": {}
            },
            "sub": {
              "type": {}
            },
            "summary": {
              "type": {}
            },
            "sup": {
              "type": {}
            },
            "svg": {
              "type": {}
            },
            "table": {
              "type": {}
            },
            "tbody": {
              "type": {}
            },
            "td": {
              "type": {}
            },
            "text": {
              "type": {}
            },
            "textarea": {
              "type": {}
            },
            "tfoot": {
              "type": {}
            },
            "th": {
              "type": {}
            },
            "thead": {
              "type": {}
            },
            "time": {
              "type": {}
            },
            "title": {
              "type": {}
            },
            "tr": {
              "type": {}
            },
            "track": {
              "type": {}
            },
            "tspan": {
              "type": {}
            },
            "u": {
              "type": {}
            },
            "ul": {
              "type": {}
            },
            "var": {
              "type": {}
            },
            "video": {
              "type": {}
            },
            "wbr": {
              "type": {}
            }
          },
          "PropTypes": {
            "PropTypes": {},
            "any": {
              "isRequired": function () {}
            },
            "array": {
              "isRequired": function () {}
            },
            "arrayOf": function () {},
            "bool": {
              "isRequired": function () {}
            },
            "checkPropTypes": function () {},
            "element": {
              "isRequired": function () {}
            },
            "func": {
              "isRequired": function () {}
            },
            "instanceOf": function () {},
            "node": {
              "isRequired": function () {}
            },
            "number": {
              "isRequired": function () {}
            },
            "object": {
              "isRequired": function () {}
            },
            "objectOf": function () {},
            "oneOf": function () {},
            "oneOfType": function () {},
            "shape": function () {},
            "string": {
              "isRequired": function () {}
            },
            "symbol": {
              "isRequired": function () {}
            }
          },
          "PureComponent": function () {},
          "__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED": {
            "ReactCurrentOwner": {
              "current": {}
            }
          },
          "__spread": function () {},
          "cloneElement": function () {},
          "createClass": function () {},
          "createElement": function () {},
          "createFactory": function () {},
          "createMixin": function () {},
          "isValidElement": function () {},
          "version": {}
        },
        "ReactDOM": {
          "findDOMNode": function () {},
          "render": function () {},
          "unmountComponentAtNode": function () {},
          "unstable_batchedUpdates": function () {},
          "unstable_renderSubtreeIntoContainer": function () {},
          "version": {}
        },
        "addEventListener": function () {},
        "alert": function () {},
        "applicationCache": {
          "CHECKING": {},
          "DOWNLOADING": {},
          "IDLE": {},
          "OBSOLETE": {},
          "UNCACHED": {},
          "UPDATEREADY": {},
          "abort": function () {},
          "addEventListener": function () {},
          "dispatchEvent": function () {},
          "oncached": {},
          "onchecking": {},
          "ondownloading": {},
          "onerror": {},
          "onnoupdate": {},
          "onobsolete": {},
          "onprogress": {},
          "onupdateready": {},
          "removeEventListener": function () {},
          "status": {},
          "swapCache": function () {},
          "update": function () {}
        },
        "atob": function () {},
        "blur": function () {},
        "btoa": function () {},
        "cancelAnimationFrame": function () {},
        "captureEvents": function () {},
        "clearInterval": function () {},
        "clearTimeout": function () {},
        "clientInformation": {
          "appCodeName": {},
          "appName": {},
          "appVersion": {},
          "cookieEnabled": {},
          "geolocation": {
            "clearWatch": function () {},
            "getCurrentPosition": function () {},
            "watchPosition": function () {}
          },
          "getGamepads": function () {},
          "getStorageUpdates": function () {},
          "javaEnabled": function () {},
          "language": {},
          "languages": {},
          "maxTouchPoints": {},
          "mediaCapabilities": {
            "decodingInfo": function () {}
          },
          "mimeTypes": {
            "0": {
              "description": {},
              "enabledPlugin": {
                "0": {},
                "1": {
                  "description": {},
                  "enabledPlugin": {},
                  "suffixes": {},
                  "type": {}
                },
                "2": {
                  "description": {},
                  "enabledPlugin": {},
                  "suffixes": {},
                  "type": {}
                },
                "description": {},
                "filename": {},
                "item": function () {},
                "length": {},
                "name": {},
                "namedItem": function () {}
              },
              "suffixes": {},
              "type": {}
            },
            "1": {
              "description": {},
              "enabledPlugin": {
                "0": {
                  "description": {},
                  "enabledPlugin": {},
                  "suffixes": {},
                  "type": {}
                },
                "1": {},
                "2": {
                  "description": {},
                  "enabledPlugin": {},
                  "suffixes": {},
                  "type": {}
                },
                "description": {},
                "filename": {},
                "item": function () {},
                "length": {},
                "name": {},
                "namedItem": function () {}
              },
              "suffixes": {},
              "type": {}
            },
            "2": {
              "description": {},
              "enabledPlugin": {
                "0": {
                  "description": {},
                  "enabledPlugin": {},
                  "suffixes": {},
                  "type": {}
                },
                "1": {
                  "description": {},
                  "enabledPlugin": {},
                  "suffixes": {},
                  "type": {}
                },
                "2": {},
                "description": {},
                "filename": {},
                "item": function () {},
                "length": {},
                "name": {},
                "namedItem": function () {}
              },
              "suffixes": {},
              "type": {}
            },
            "item": function () {},
            "length": {},
            "namedItem": function () {}
          },
          "onLine": {},
          "platform": {},
          "plugins": {
            "0": {
              "0": {
                "description": {},
                "enabledPlugin": {},
                "suffixes": {},
                "type": {}
              },
              "1": {
                "description": {},
                "enabledPlugin": {},
                "suffixes": {},
                "type": {}
              },
              "2": {
                "description": {},
                "enabledPlugin": {},
                "suffixes": {},
                "type": {}
              },
              "description": {},
              "filename": {},
              "item": function () {},
              "length": {},
              "name": {},
              "namedItem": function () {}
            },
            "item": function () {},
            "length": {},
            "namedItem": function () {},
            "refresh": function () {}
          },
          "product": {},
          "productSub": {},
          "requestMediaKeySystemAccess": function () {},
          "sendBeacon": function () {},
          "userAgent": {},
          "vendor": {},
          "vendorSub": {},
          "webdriver": {}
        },
        "close": function () {},
        "closed": {},
        "confirm": function () {},
        "createReactClass": function () {},
        "crypto": {
          "getRandomValues": function () {},
          "subtle": {
            "decrypt": function () {},
            "deriveBits": function () {},
            "deriveKey": function () {},
            "digest": function () {},
            "encrypt": function () {},
            "exportKey": function () {},
            "generateKey": function () {},
            "importKey": function () {},
            "sign": function () {},
            "unwrapKey": function () {},
            "verify": function () {},
            "wrapKey": function () {}
          }
        },
        "customElements": {
          "define": function () {},
          "get": function () {},
          "upgrade": function () {},
          "whenDefined": function () {}
        },
        "defaultStatus": {},
        "defaultstatus": {},
        "devicePixelRatio": {},
        "dispatchEvent": function () {},
        "document": {},
        "event": {
          "AT_TARGET": {},
          "BUBBLING_PHASE": {},
          "CAPTURING_PHASE": {},
          "NONE": {},
          "bubbles": {},
          "cancelBubble": {},
          "cancelable": {},
          "composed": {},
          "composedPath": function () {},
          "currentTarget": {
            "addEventListener": function () {},
            "close": function () {},
            "dispatchEvent": function () {},
            "onmessage": function () {},
            "postMessage": function () {},
            "removeEventListener": function () {},
            "start": function () {}
          },
          "data": {},
          "defaultPrevented": {},
          "eventPhase": {},
          "initEvent": function () {},
          "initMessageEvent": function () {},
          "isTrusted": {},
          "lastEventId": {},
          "origin": {},
          "ports": {},
          "preventDefault": function () {},
          "returnValue": {},
          "source": {},
          "srcElement": {
            "addEventListener": function () {},
            "close": function () {},
            "dispatchEvent": function () {},
            "onmessage": function () {},
            "postMessage": function () {},
            "removeEventListener": function () {},
            "start": function () {}
          },
          "stopImmediatePropagation": function () {},
          "stopPropagation": function () {},
          "target": {
            "addEventListener": function () {},
            "close": function () {},
            "dispatchEvent": function () {},
            "onmessage": function () {},
            "postMessage": function () {},
            "removeEventListener": function () {},
            "start": function () {}
          },
          "timeStamp": {},
          "type": {}
        },
        "fetch": function () {},
        "find": function () {},
        "focus": function () {},
        "frameElement": {},
        "frames": {},
        "getComputedStyle": function () {},
        "getMatchedCSSRules": function () {},
        "getSelection": function () {},
        "history": {
          "back": function () {},
          "forward": function () {},
          "go": function () {},
          "length": {},
          "pushState": function () {},
          "replaceState": function () {},
          "scrollRestoration": {},
          "state": {}
        },
        "indexedDB": {
          "cmp": function () {},
          "databases": function () {},
          "deleteDatabase": function () {},
          "open": function () {}
        },
        "innerHeight": {},
        "innerWidth": {},
        "isSecureContext": {},
        "javascript_externs_generator": {
          "ui": {
            "core": {
              "init": function () {},
              "re_render": function () {}
            }
          }
        },
        "js_beautify": function () {},
        "length": {},
        "localStorage": {
          "clear": function () {},
          "getItem": function () {},
          "key": function () {},
          "length": {},
          "removeItem": function () {},
          "setItem": function () {}
        },
        "location": {
          "ancestorOrigins": {
            "contains": function () {},
            "item": function () {},
            "length": {}
          },
          "assign": function () {},
          "hash": {},
          "host": {},
          "hostname": {},
          "href": {},
          "origin": {},
          "pathname": {},
          "port": {},
          "protocol": {},
          "reload": function () {},
          "replace": function () {},
          "search": {},
          "toString": function () {}
        },
        "locationbar": {
          "visible": {}
        },
        "matchMedia": function () {},
        "menubar": {
          "visible": {}
        },
        "moveBy": function () {},
        "moveTo": function () {},
        "name": {},
        "navigator": {
          "appCodeName": {},
          "appName": {},
          "appVersion": {},
          "cookieEnabled": {},
          "geolocation": {
            "clearWatch": function () {},
            "getCurrentPosition": function () {},
            "watchPosition": function () {}
          },
          "getGamepads": function () {},
          "getStorageUpdates": function () {},
          "javaEnabled": function () {},
          "language": {},
          "languages": {},
          "maxTouchPoints": {},
          "mediaCapabilities": {
            "decodingInfo": function () {}
          },
          "mimeTypes": {
            "0": {
              "description": {},
              "enabledPlugin": {
                "0": {},
                "1": {
                  "description": {},
                  "enabledPlugin": {},
                  "suffixes": {},
                  "type": {}
                },
                "2": {
                  "description": {},
                  "enabledPlugin": {},
                  "suffixes": {},
                  "type": {}
                },
                "description": {},
                "filename": {},
                "item": function () {},
                "length": {},
                "name": {},
                "namedItem": function () {}
              },
              "suffixes": {},
              "type": {}
            },
            "1": {
              "description": {},
              "enabledPlugin": {
                "0": {
                  "description": {},
                  "enabledPlugin": {},
                  "suffixes": {},
                  "type": {}
                },
                "1": {},
                "2": {
                  "description": {},
                  "enabledPlugin": {},
                  "suffixes": {},
                  "type": {}
                },
                "description": {},
                "filename": {},
                "item": function () {},
                "length": {},
                "name": {},
                "namedItem": function () {}
              },
              "suffixes": {},
              "type": {}
            },
            "2": {
              "description": {},
              "enabledPlugin": {
                "0": {
                  "description": {},
                  "enabledPlugin": {},
                  "suffixes": {},
                  "type": {}
                },
                "1": {
                  "description": {},
                  "enabledPlugin": {},
                  "suffixes": {},
                  "type": {}
                },
                "2": {},
                "description": {},
                "filename": {},
                "item": function () {},
                "length": {},
                "name": {},
                "namedItem": function () {}
              },
              "suffixes": {},
              "type": {}
            },
            "item": function () {},
            "length": {},
            "namedItem": function () {}
          },
          "onLine": {},
          "platform": {},
          "plugins": {
            "0": {
              "0": {
                "description": {},
                "enabledPlugin": {},
                "suffixes": {},
                "type": {}
              },
              "1": {
                "description": {},
                "enabledPlugin": {},
                "suffixes": {},
                "type": {}
              },
              "2": {
                "description": {},
                "enabledPlugin": {},
                "suffixes": {},
                "type": {}
              },
              "description": {},
              "filename": {},
              "item": function () {},
              "length": {},
              "name": {},
              "namedItem": function () {}
            },
            "item": function () {},
            "length": {},
            "namedItem": function () {},
            "refresh": function () {}
          },
          "product": {},
          "productSub": {},
          "requestMediaKeySystemAccess": function () {},
          "sendBeacon": function () {},
          "userAgent": {},
          "vendor": {},
          "vendorSub": {},
          "webdriver": {}
        },
        "offscreenBuffering": {},
        "onabort": {},
        "onafterprint": {},
        "onanimationcancel": {},
        "onanimationend": {},
        "onanimationiteration": {},
        "onanimationstart": {},
        "onbeforeprint": {},
        "onbeforeunload": {},
        "onblur": {},
        "oncanplay": {},
        "oncanplaythrough": {},
        "onchange": {},
        "onclick": {},
        "oncontextmenu": {},
        "oncuechange": {},
        "ondblclick": {},
        "ondrag": {},
        "ondragend": {},
        "ondragenter": {},
        "ondragleave": {},
        "ondragover": {},
        "ondragstart": {},
        "ondrop": {},
        "ondurationchange": {},
        "onemptied": {},
        "onended": {},
        "onerror": {},
        "onfocus": {},
        "ongotpointercapture": {},
        "onhashchange": {},
        "oninput": {},
        "oninvalid": {},
        "onkeydown": {},
        "onkeypress": {},
        "onkeyup": {},
        "onlanguagechange": {},
        "onload": {},
        "onloadeddata": {},
        "onloadedmetadata": {},
        "onloadstart": {},
        "onlostpointercapture": {},
        "onmessage": {},
        "onmousedown": {},
        "onmouseenter": {},
        "onmouseleave": {},
        "onmousemove": {},
        "onmouseout": {},
        "onmouseover": {},
        "onmouseup": {},
        "onmousewheel": {},
        "onoffline": {},
        "ononline": {},
        "onpagehide": {},
        "onpageshow": {},
        "onpause": {},
        "onplay": {},
        "onplaying": {},
        "onpointercancel": {},
        "onpointerdown": {},
        "onpointerenter": {},
        "onpointerleave": {},
        "onpointermove": {},
        "onpointerout": {},
        "onpointerover": {},
        "onpointerup": {},
        "onpopstate": {},
        "onprogress": {},
        "onratechange": {},
        "onrejectionhandled": {},
        "onreset": {},
        "onresize": {},
        "onscroll": {},
        "onseeked": {},
        "onseeking": {},
        "onselect": {},
        "onstalled": {},
        "onstorage": {},
        "onsubmit": {},
        "onsuspend": {},
        "ontimeupdate": {},
        "ontoggle": {},
        "ontransitioncancel": {},
        "ontransitionend": {},
        "ontransitionrun": {},
        "ontransitionstart": {},
        "onunhandledrejection": {},
        "onunload": {},
        "onvolumechange": {},
        "onwaiting": {},
        "open": function () {},
        "opener": {},
        "origin": {},
        "outerHeight": {},
        "outerWidth": {},
        "pageXOffset": {},
        "pageYOffset": {},
        "parent": {},
        "performance": {
          "addEventListener": function () {},
          "clearMarks": function () {},
          "clearMeasures": function () {},
          "clearResourceTimings": function () {},
          "dispatchEvent": function () {},
          "getEntries": function () {},
          "getEntriesByName": function () {},
          "getEntriesByType": function () {},
          "mark": function () {},
          "measure": function () {},
          "navigation": {
            "TYPE_BACK_FORWARD": {},
            "TYPE_NAVIGATE": {},
            "TYPE_RELOAD": {},
            "TYPE_RESERVED": {},
            "redirectCount": {},
            "type": {}
          },
          "now": function () {},
          "onresourcetimingbufferfull": {},
          "removeEventListener": function () {},
          "setResourceTimingBufferSize": function () {},
          "timing": {
            "connectEnd": {},
            "connectStart": {},
            "domComplete": {},
            "domContentLoadedEventEnd": {},
            "domContentLoadedEventStart": {},
            "domInteractive": {},
            "domLoading": {},
            "domainLookupEnd": {},
            "domainLookupStart": {},
            "fetchStart": {},
            "loadEventEnd": {},
            "loadEventStart": {},
            "navigationStart": {},
            "redirectEnd": {},
            "redirectStart": {},
            "requestStart": {},
            "responseEnd": {},
            "responseStart": {},
            "secureConnectionStart": {},
            "toJSON": function () {},
            "unloadEventEnd": {},
            "unloadEventStart": {}
          }
        },
        "personalbar": {
          "visible": {}
        },
        "postMessage": function () {},
        "print": function () {},
        "prompt": function () {},
        "queueMicrotask": function () {},
        "reagent": {
          "core": {
            "force_update_all": function () {}
          }
        },
        "releaseEvents": function () {},
        "removeEventListener": function () {},
        "requestAnimationFrame": function () {},
        "resizeBy": function () {},
        "resizeTo": function () {},
        "safari": {
          "pushNotification": {
            "permission": function () {},
            "requestPermission": function () {}
          }
        },
        "screen": {
          "availHeight": {},
          "availLeft": {},
          "availTop": {},
          "availWidth": {},
          "colorDepth": {},
          "height": {},
          "pixelDepth": {},
          "width": {}
        },
        "screenLeft": {},
        "screenTop": {},
        "screenX": {},
        "screenY": {},
        "scroll": function () {},
        "scrollBy": function () {},
        "scrollTo": function () {},
        "scrollX": {},
        "scrollY": {},
        "scrollbars": {
          "visible": {}
        },
        "self": {},
        "sessionStorage": {
          "clear": function () {},
          "getItem": function () {},
          "key": function () {},
          "length": {},
          "removeItem": function () {},
          "setItem": function () {}
        },
        "setInterval": function () {},
        "setTimeout": function () {},
        "showModalDialog": function () {},
        "speechSynthesis": {
          "cancel": function () {},
          "getVoices": function () {},
          "pause": function () {},
          "paused": {},
          "pending": {},
          "resume": function () {},
          "speak": function () {},
          "speaking": {}
        },
        "status": {},
        "statusbar": {
          "visible": {}
        },
        "stop": function () {},
        "styleMedia": {
          "matchMedium": function () {},
          "type": {}
        },
        "toolbar": {
          "visible": {}
        },
        "top": {},
        "visualViewport": {
          "addEventListener": function () {},
          "dispatchEvent": function () {},
          "height": {},
          "offsetLeft": {},
          "offsetTop": {},
          "onresize": {},
          "onscroll": {},
          "pageLeft": {},
          "pageTop": {},
          "removeEventListener": function () {},
          "scale": {},
          "width": {}
        },
        "webkitCancelAnimationFrame": function () {},
        "webkitCancelRequestAnimationFrame": function () {},
        "webkitConvertPointFromNodeToPage": function () {},
        "webkitConvertPointFromPageToNode": function () {},
        "webkitIndexedDB": {
          "cmp": function () {},
          "databases": function () {},
          "deleteDatabase": function () {},
          "open": function () {}
        },
        "webkitRequestAnimationFrame": function () {},
        "window": {}
      },
      "visualViewport": {
        "addEventListener": function () {},
        "dispatchEvent": function () {},
        "height": {},
        "offsetLeft": {},
        "offsetTop": {},
        "onresize": {},
        "onscroll": {},
        "pageLeft": {},
        "pageTop": {},
        "removeEventListener": function () {},
        "scale": {},
        "width": {}
      },
      "webkitCancelAnimationFrame": function () {},
      "webkitCancelRequestAnimationFrame": function () {},
      "webkitConvertPointFromNodeToPage": function () {},
      "webkitConvertPointFromPageToNode": function () {},
      "webkitIndexedDB": {
        "cmp": function () {},
        "databases": function () {},
        "deleteDatabase": function () {},
        "open": function () {}
      },
      "webkitRequestAnimationFrame": function () {},
      "window": {}
    },
    "hasIndexedDB": {},
    "hash": function () {},
    "isArray": function () {},
    "isBrowser": {},
    "isBrowserify": {},
    "isCordova": {},
    "isMeteor": {},
    "isMeteorClient": {},
    "isMeteorServer": {},
    "isNativeFunction": function () {},
    "isNode": {},
    "isReactNative": {},
    "isRequireJS": {},
    "isWebWorker": {},
    "like": function () {},
    "loadBinaryFile": function () {},
    "loadFile": function () {},
    "removeFile": function () {},
    "saveAs": function () {},
    "saveFile": function () {},
    "uncomment": function () {},
    "undoubleq": function () {},
    "xlscn": function () {},
    "xlsnc": function () {}
  },
  "vars": {},
  "version": {},
  "worker": function () {},
  "write": function () {},
  "yy": {
    "AggrValue": function () {},
    "AlterTable": function () {},
    "Apply": function () {},
    "ArrayValue": function () {},
    "Assert": function () {},
    "AttachDatabase": function () {},
    "Base": function () {},
    "BeginEnd": function () {},
    "BeginTransaction": function () {},
    "Break": function () {},
    "CaseValue": function () {},
    "Column": function () {},
    "ColumnDef": function () {},
    "CommitTransaction": function () {},
    "Continue": function () {},
    "Convert": function () {},
    "CreateDatabase": function () {},
    "CreateEdge": function () {},
    "CreateGraph": function () {},
    "CreateIndex": function () {},
    "CreateTable": function () {},
    "CreateTrigger": function () {},
    "CreateVertex": function () {},
    "Declare": function () {},
    "Delete": function () {},
    "DetachDatabase": function () {},
    "DomainValueValue": function () {},
    "DropDatabase": function () {},
    "DropIndex": function () {},
    "DropTable": function () {},
    "DropTrigger": function () {},
    "ExistsValue": function () {},
    "Expression": function () {},
    "ExpressionStatement": function () {},
    "FromData": function () {},
    "FuncValue": function () {},
    "GroupExpression": function () {},
    "If": function () {},
    "Insert": function () {},
    "JavaScript": function () {},
    "Join": function () {},
    "Json": function () {},
    "Literal": function () {},
    "LogicValue": function () {},
    "Merge": function () {},
    "NullValue": function () {},
    "NumValue": function () {},
    "Op": function () {},
    "OrderExpression": function () {},
    "Over": function () {},
    "ParamValue": function () {},
    "Print": function () {},
    "Reindex": function () {},
    "Require": function () {},
    "RollbackTransaction": function () {},
    "Search": function () {},
    "Select": function () {},
    "SetColumn": function () {},
    "SetVariable": function () {},
    "ShowColumns": function () {},
    "ShowCreateTable": function () {},
    "ShowDatabases": function () {},
    "ShowIndex": function () {},
    "ShowTables": function () {},
    "Source": function () {},
    "Statements": function () {},
    "StringValue": function () {},
    "Table": function () {},
    "TruncateTable": function () {},
    "UniOp": function () {},
    "Union": function () {},
    "Update": function () {},
    "UseDatabase": function () {},
    "VarValue": function () {},
    "View": function () {},
    "While": function () {},
    "WithSelect": function () {},
    "casesensitive": {},
    "extend": function () {}
  }
};
alasql.Database.prototype = {
  "autoval": function () {},
  "exec": function () {},
  "resetSqlCache": function () {},
  "transaction": function () {}
};
alasql.Table.prototype = {
  "indexColumns": function () {}
};
alasql.Transaction.prototype = {
  "commit": function () {},
  "exec": function () {},
  "executeSQL": function () {},
  "rollback": function () {}
};
alasql.parser.Parser.prototype = {
  "Parser": function () {},
  "defaultActions": function () {},
  "lexer": function () {},
  "parse": function () {},
  "parseError": function () {},
  "performAction": function () {},
  "productions_": function () {},
  "symbols_": function () {},
  "table": function () {},
  "terminals_": function () {},
  "trace": function () {},
  "yy": function () {}
};
alasql.parser.yy.AggrValue.prototype = {
  "findAggregator": function () {},
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.parser.yy.AlterTable.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.Apply.prototype = {
  "toString": function () {}
};
alasql.parser.yy.ArrayValue.prototype = {
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.parser.yy.Assert.prototype = {
  "execute": function () {}
};
alasql.parser.yy.AttachDatabase.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.Base.prototype = {
  "compile": function () {},
  "exec": function () {},
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.parser.yy.BeginEnd.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.BeginTransaction.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.Break.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.CaseValue.prototype = {
  "findAggregator": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.parser.yy.Column.prototype = {
  "toJS": function () {},
  "toString": function () {}
};
alasql.parser.yy.ColumnDef.prototype = {
  "toString": function () {}
};
alasql.parser.yy.CommitTransaction.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.Continue.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.Convert.prototype = {
  "toJS": function () {},
  "toString": function () {}
};
alasql.parser.yy.CreateDatabase.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.CreateEdge.prototype = {
  "compile": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.parser.yy.CreateGraph.prototype = {
  "compile1": function () {},
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.CreateIndex.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.CreateTable.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.CreateTrigger.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.CreateVertex.prototype = {
  "compile": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.parser.yy.Declare.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.Delete.prototype = {
  "compile": function () {},
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.DetachDatabase.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.DomainValueValue.prototype = {
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.parser.yy.DropDatabase.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.DropIndex.prototype = {
  "compile": function () {},
  "toString": function () {}
};
alasql.parser.yy.DropTable.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.DropTrigger.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.ExistsValue.prototype = {
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.parser.yy.Expression.prototype = {
  "compile": function () {},
  "findAggregator": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.parser.yy.ExpressionStatement.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.FromData.prototype = {
  "toJS": function () {},
  "toString": function () {}
};
alasql.parser.yy.FuncValue.prototype = {
  "execute": function () {},
  "findAggregator": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.parser.yy.GroupExpression.prototype = {
  "toString": function () {}
};
alasql.parser.yy.If.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.Insert.prototype = {
  "compile": function () {},
  "execute": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.parser.yy.JavaScript.prototype = {
  "execute": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.parser.yy.Join.prototype = {
  "toString": function () {}
};
alasql.parser.yy.Json.prototype = {
  "toJS": function () {},
  "toString": function () {}
};
alasql.parser.yy.Literal.prototype = {
  "toString": function () {}
};
alasql.parser.yy.LogicValue.prototype = {
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.parser.yy.Merge.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.NullValue.prototype = {
  "toJS": function () {},
  "toString": function () {}
};
alasql.parser.yy.NumValue.prototype = {
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.parser.yy.Op.prototype = {
  "findAggregator": function () {},
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.parser.yy.OrderExpression.prototype = {
  "toString": function () {}
};
alasql.parser.yy.Over.prototype = {
  "toString": function () {}
};
alasql.parser.yy.ParamValue.prototype = {
  "toJS": function () {},
  "toString": function () {}
};
alasql.parser.yy.Print.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.Reindex.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.Require.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.RollbackTransaction.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.Search.prototype = {
  "compile": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.parser.yy.Select.prototype = {
  "From": function () {},
  "GroupBy": function () {},
  "OrderBy": function () {},
  "Select": function () {},
  "Top": function () {},
  "Where": function () {},
  "compile": function () {},
  "compileDefCols": function () {},
  "compileFrom": function () {},
  "compileGroup": function () {},
  "compileHaving": function () {},
  "compileJoins": function () {},
  "compileOrder": function () {},
  "compilePivot": function () {},
  "compileQueries": function () {},
  "compileRemoveColumns": function () {},
  "compileSelect1": function () {},
  "compileSelect2": function () {},
  "compileSelectGroup0": function () {},
  "compileSelectGroup1": function () {},
  "compileSelectGroup2": function () {},
  "compileUnpivot": function () {},
  "compileWhere": function () {},
  "compileWhereExists": function () {},
  "compileWhereJoins": function () {},
  "exec": function () {},
  "execute": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.parser.yy.SetColumn.prototype = {
  "toString": function () {}
};
alasql.parser.yy.SetVariable.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.ShowColumns.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.ShowCreateTable.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.ShowDatabases.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.ShowIndex.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.ShowTables.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.Source.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.Statements.prototype = {
  "compile": function () {},
  "toString": function () {}
};
alasql.parser.yy.StringValue.prototype = {
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.parser.yy.Table.prototype = {
  "toString": function () {}
};
alasql.parser.yy.TruncateTable.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.UniOp.prototype = {
  "findAggregator": function () {},
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.parser.yy.Union.prototype = {
  "compile": function () {},
  "toString": function () {}
};
alasql.parser.yy.Update.prototype = {
  "compile": function () {},
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.UseDatabase.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.VarValue.prototype = {
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.parser.yy.View.prototype = {
  "toString": function () {}
};
alasql.parser.yy.While.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.parser.yy.WithSelect.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.Database.prototype = {
  "autoval": function () {},
  "exec": function () {},
  "resetSqlCache": function () {},
  "transaction": function () {}
};
alasql.utils.global.alasql.Table.prototype = {
  "indexColumns": function () {}
};
alasql.utils.global.alasql.Transaction.prototype = {
  "commit": function () {},
  "exec": function () {},
  "executeSQL": function () {},
  "rollback": function () {}
};
alasql.utils.global.alasql.parser.Parser.prototype = {
  "Parser": function () {},
  "defaultActions": function () {},
  "lexer": function () {},
  "parse": function () {},
  "parseError": function () {},
  "performAction": function () {},
  "productions_": function () {},
  "symbols_": function () {},
  "table": function () {},
  "terminals_": function () {},
  "trace": function () {},
  "yy": function () {}
};
alasql.utils.global.alasql.parser.yy.AggrValue.prototype = {
  "findAggregator": function () {},
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.utils.global.alasql.parser.yy.AlterTable.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.Apply.prototype = {
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.ArrayValue.prototype = {
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.utils.global.alasql.parser.yy.Assert.prototype = {
  "execute": function () {}
};
alasql.utils.global.alasql.parser.yy.AttachDatabase.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.Base.prototype = {
  "compile": function () {},
  "exec": function () {},
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.utils.global.alasql.parser.yy.BeginEnd.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.BeginTransaction.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.Break.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.CaseValue.prototype = {
  "findAggregator": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.Column.prototype = {
  "toJS": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.ColumnDef.prototype = {
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.CommitTransaction.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.Continue.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.Convert.prototype = {
  "toJS": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.CreateDatabase.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.CreateEdge.prototype = {
  "compile": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.CreateGraph.prototype = {
  "compile1": function () {},
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.CreateIndex.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.CreateTable.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.CreateTrigger.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.CreateVertex.prototype = {
  "compile": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.Declare.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.Delete.prototype = {
  "compile": function () {},
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.DetachDatabase.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.DomainValueValue.prototype = {
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.utils.global.alasql.parser.yy.DropDatabase.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.DropIndex.prototype = {
  "compile": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.DropTable.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.DropTrigger.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.ExistsValue.prototype = {
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.utils.global.alasql.parser.yy.Expression.prototype = {
  "compile": function () {},
  "findAggregator": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.ExpressionStatement.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.FromData.prototype = {
  "toJS": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.FuncValue.prototype = {
  "execute": function () {},
  "findAggregator": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.GroupExpression.prototype = {
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.If.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.Insert.prototype = {
  "compile": function () {},
  "execute": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.JavaScript.prototype = {
  "execute": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.Join.prototype = {
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.Json.prototype = {
  "toJS": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.Literal.prototype = {
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.LogicValue.prototype = {
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.utils.global.alasql.parser.yy.Merge.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.NullValue.prototype = {
  "toJS": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.NumValue.prototype = {
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.utils.global.alasql.parser.yy.Op.prototype = {
  "findAggregator": function () {},
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.utils.global.alasql.parser.yy.OrderExpression.prototype = {
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.Over.prototype = {
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.ParamValue.prototype = {
  "toJS": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.Print.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.Reindex.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.Require.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.RollbackTransaction.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.Search.prototype = {
  "compile": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.Select.prototype = {
  "From": function () {},
  "GroupBy": function () {},
  "OrderBy": function () {},
  "Select": function () {},
  "Top": function () {},
  "Where": function () {},
  "compile": function () {},
  "compileDefCols": function () {},
  "compileFrom": function () {},
  "compileGroup": function () {},
  "compileHaving": function () {},
  "compileJoins": function () {},
  "compileOrder": function () {},
  "compilePivot": function () {},
  "compileQueries": function () {},
  "compileRemoveColumns": function () {},
  "compileSelect1": function () {},
  "compileSelect2": function () {},
  "compileSelectGroup0": function () {},
  "compileSelectGroup1": function () {},
  "compileSelectGroup2": function () {},
  "compileUnpivot": function () {},
  "compileWhere": function () {},
  "compileWhereExists": function () {},
  "compileWhereJoins": function () {},
  "exec": function () {},
  "execute": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.SetColumn.prototype = {
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.SetVariable.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.ShowColumns.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.ShowCreateTable.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.ShowDatabases.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.ShowIndex.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.ShowTables.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.Source.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.Statements.prototype = {
  "compile": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.StringValue.prototype = {
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.utils.global.alasql.parser.yy.Table.prototype = {
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.TruncateTable.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.UniOp.prototype = {
  "findAggregator": function () {},
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.utils.global.alasql.parser.yy.Union.prototype = {
  "compile": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.Update.prototype = {
  "compile": function () {},
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.UseDatabase.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.VarValue.prototype = {
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.utils.global.alasql.parser.yy.View.prototype = {
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.While.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.parser.yy.WithSelect.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.AggrValue.prototype = {
  "findAggregator": function () {},
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.utils.global.alasql.yy.AlterTable.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.Apply.prototype = {
  "toString": function () {}
};
alasql.utils.global.alasql.yy.ArrayValue.prototype = {
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.utils.global.alasql.yy.Assert.prototype = {
  "execute": function () {}
};
alasql.utils.global.alasql.yy.AttachDatabase.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.Base.prototype = {
  "compile": function () {},
  "exec": function () {},
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.utils.global.alasql.yy.BeginEnd.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.BeginTransaction.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.Break.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.CaseValue.prototype = {
  "findAggregator": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.Column.prototype = {
  "toJS": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.ColumnDef.prototype = {
  "toString": function () {}
};
alasql.utils.global.alasql.yy.CommitTransaction.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.Continue.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.Convert.prototype = {
  "toJS": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.CreateDatabase.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.CreateEdge.prototype = {
  "compile": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.CreateGraph.prototype = {
  "compile1": function () {},
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.CreateIndex.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.CreateTable.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.CreateTrigger.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.CreateVertex.prototype = {
  "compile": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.Declare.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.Delete.prototype = {
  "compile": function () {},
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.DetachDatabase.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.DomainValueValue.prototype = {
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.utils.global.alasql.yy.DropDatabase.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.DropIndex.prototype = {
  "compile": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.DropTable.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.DropTrigger.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.ExistsValue.prototype = {
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.utils.global.alasql.yy.Expression.prototype = {
  "compile": function () {},
  "findAggregator": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.ExpressionStatement.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.FromData.prototype = {
  "toJS": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.FuncValue.prototype = {
  "execute": function () {},
  "findAggregator": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.GroupExpression.prototype = {
  "toString": function () {}
};
alasql.utils.global.alasql.yy.If.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.Insert.prototype = {
  "compile": function () {},
  "execute": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.JavaScript.prototype = {
  "execute": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.Join.prototype = {
  "toString": function () {}
};
alasql.utils.global.alasql.yy.Json.prototype = {
  "toJS": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.Literal.prototype = {
  "toString": function () {}
};
alasql.utils.global.alasql.yy.LogicValue.prototype = {
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.utils.global.alasql.yy.Merge.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.NullValue.prototype = {
  "toJS": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.NumValue.prototype = {
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.utils.global.alasql.yy.Op.prototype = {
  "findAggregator": function () {},
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.utils.global.alasql.yy.OrderExpression.prototype = {
  "toString": function () {}
};
alasql.utils.global.alasql.yy.Over.prototype = {
  "toString": function () {}
};
alasql.utils.global.alasql.yy.ParamValue.prototype = {
  "toJS": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.Print.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.Reindex.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.Require.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.RollbackTransaction.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.Search.prototype = {
  "compile": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.Select.prototype = {
  "From": function () {},
  "GroupBy": function () {},
  "OrderBy": function () {},
  "Select": function () {},
  "Top": function () {},
  "Where": function () {},
  "compile": function () {},
  "compileDefCols": function () {},
  "compileFrom": function () {},
  "compileGroup": function () {},
  "compileHaving": function () {},
  "compileJoins": function () {},
  "compileOrder": function () {},
  "compilePivot": function () {},
  "compileQueries": function () {},
  "compileRemoveColumns": function () {},
  "compileSelect1": function () {},
  "compileSelect2": function () {},
  "compileSelectGroup0": function () {},
  "compileSelectGroup1": function () {},
  "compileSelectGroup2": function () {},
  "compileUnpivot": function () {},
  "compileWhere": function () {},
  "compileWhereExists": function () {},
  "compileWhereJoins": function () {},
  "exec": function () {},
  "execute": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.SetColumn.prototype = {
  "toString": function () {}
};
alasql.utils.global.alasql.yy.SetVariable.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.ShowColumns.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.ShowCreateTable.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.ShowDatabases.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.ShowIndex.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.ShowTables.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.Source.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.Statements.prototype = {
  "compile": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.StringValue.prototype = {
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.utils.global.alasql.yy.Table.prototype = {
  "toString": function () {}
};
alasql.utils.global.alasql.yy.TruncateTable.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.UniOp.prototype = {
  "findAggregator": function () {},
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.utils.global.alasql.yy.Union.prototype = {
  "compile": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.Update.prototype = {
  "compile": function () {},
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.UseDatabase.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.VarValue.prototype = {
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.utils.global.alasql.yy.View.prototype = {
  "toString": function () {}
};
alasql.utils.global.alasql.yy.While.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.alasql.yy.WithSelect.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.utils.global.parent.React.Component.prototype = {
  "forceUpdate": function () {},
  "isReactComponent": function () {},
  "setState": function () {}
};
alasql.utils.global.parent.React.PureComponent.prototype = {
  "constructor": function () {},
  "forceUpdate": function () {},
  "isPureReactComponent": function () {},
  "isReactComponent": function () {},
  "setState": function () {}
};
alasql.utils.global.top.React.Component.prototype = {
  "forceUpdate": function () {},
  "isReactComponent": function () {},
  "setState": function () {}
};
alasql.utils.global.top.React.PureComponent.prototype = {
  "constructor": function () {},
  "forceUpdate": function () {},
  "isPureReactComponent": function () {},
  "isReactComponent": function () {},
  "setState": function () {}
};
alasql.yy.AggrValue.prototype = {
  "findAggregator": function () {},
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.yy.AlterTable.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.Apply.prototype = {
  "toString": function () {}
};
alasql.yy.ArrayValue.prototype = {
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.yy.Assert.prototype = {
  "execute": function () {}
};
alasql.yy.AttachDatabase.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.Base.prototype = {
  "compile": function () {},
  "exec": function () {},
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.yy.BeginEnd.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.BeginTransaction.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.Break.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.CaseValue.prototype = {
  "findAggregator": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.yy.Column.prototype = {
  "toJS": function () {},
  "toString": function () {}
};
alasql.yy.ColumnDef.prototype = {
  "toString": function () {}
};
alasql.yy.CommitTransaction.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.Continue.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.Convert.prototype = {
  "toJS": function () {},
  "toString": function () {}
};
alasql.yy.CreateDatabase.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.CreateEdge.prototype = {
  "compile": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.yy.CreateGraph.prototype = {
  "compile1": function () {},
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.CreateIndex.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.CreateTable.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.CreateTrigger.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.CreateVertex.prototype = {
  "compile": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.yy.Declare.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.Delete.prototype = {
  "compile": function () {},
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.DetachDatabase.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.DomainValueValue.prototype = {
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.yy.DropDatabase.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.DropIndex.prototype = {
  "compile": function () {},
  "toString": function () {}
};
alasql.yy.DropTable.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.DropTrigger.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.ExistsValue.prototype = {
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.yy.Expression.prototype = {
  "compile": function () {},
  "findAggregator": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.yy.ExpressionStatement.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.FromData.prototype = {
  "toJS": function () {},
  "toString": function () {}
};
alasql.yy.FuncValue.prototype = {
  "execute": function () {},
  "findAggregator": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.yy.GroupExpression.prototype = {
  "toString": function () {}
};
alasql.yy.If.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.Insert.prototype = {
  "compile": function () {},
  "execute": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.yy.JavaScript.prototype = {
  "execute": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.yy.Join.prototype = {
  "toString": function () {}
};
alasql.yy.Json.prototype = {
  "toJS": function () {},
  "toString": function () {}
};
alasql.yy.Literal.prototype = {
  "toString": function () {}
};
alasql.yy.LogicValue.prototype = {
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.yy.Merge.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.NullValue.prototype = {
  "toJS": function () {},
  "toString": function () {}
};
alasql.yy.NumValue.prototype = {
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.yy.Op.prototype = {
  "findAggregator": function () {},
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.yy.OrderExpression.prototype = {
  "toString": function () {}
};
alasql.yy.Over.prototype = {
  "toString": function () {}
};
alasql.yy.ParamValue.prototype = {
  "toJS": function () {},
  "toString": function () {}
};
alasql.yy.Print.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.Reindex.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.Require.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.RollbackTransaction.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.Search.prototype = {
  "compile": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.yy.Select.prototype = {
  "From": function () {},
  "GroupBy": function () {},
  "OrderBy": function () {},
  "Select": function () {},
  "Top": function () {},
  "Where": function () {},
  "compile": function () {},
  "compileDefCols": function () {},
  "compileFrom": function () {},
  "compileGroup": function () {},
  "compileHaving": function () {},
  "compileJoins": function () {},
  "compileOrder": function () {},
  "compilePivot": function () {},
  "compileQueries": function () {},
  "compileRemoveColumns": function () {},
  "compileSelect1": function () {},
  "compileSelect2": function () {},
  "compileSelectGroup0": function () {},
  "compileSelectGroup1": function () {},
  "compileSelectGroup2": function () {},
  "compileUnpivot": function () {},
  "compileWhere": function () {},
  "compileWhereExists": function () {},
  "compileWhereJoins": function () {},
  "exec": function () {},
  "execute": function () {},
  "toJS": function () {},
  "toString": function () {}
};
alasql.yy.SetColumn.prototype = {
  "toString": function () {}
};
alasql.yy.SetVariable.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.ShowColumns.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.ShowCreateTable.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.ShowDatabases.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.ShowIndex.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.ShowTables.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.Source.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.Statements.prototype = {
  "compile": function () {},
  "toString": function () {}
};
alasql.yy.StringValue.prototype = {
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.yy.Table.prototype = {
  "toString": function () {}
};
alasql.yy.TruncateTable.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.UniOp.prototype = {
  "findAggregator": function () {},
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.yy.Union.prototype = {
  "compile": function () {},
  "toString": function () {}
};
alasql.yy.Update.prototype = {
  "compile": function () {},
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.UseDatabase.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.VarValue.prototype = {
  "toJS": function () {},
  "toString": function () {},
  "toType": function () {}
};
alasql.yy.View.prototype = {
  "toString": function () {}
};
alasql.yy.While.prototype = {
  "execute": function () {},
  "toString": function () {}
};
alasql.yy.WithSelect.prototype = {
  "execute": function () {},
  "toString": function () {}
};
/**********************************************************************
 * End Generated Extern for alasql
/**********************************************************************/
